{"docstore/metadata": {"50d3a96a-7c9f-451e-b53e-253dd074b888": {"doc_hash": "9b6ab778849e0f626574efeb11e2a7603cb0a1fddcb3ae35329e495467739ab0"}, "bf39f908-54a3-4ac5-a19e-a40be66f192c": {"doc_hash": "1967db3df96d2aba9e199229c76d8789c269afe82c2da0e933713d3d13cb3e7a"}, "86633b27-cb2b-4a77-8626-94a10383016f": {"doc_hash": "869fdb122bfd92504d4cf9adb5958b115175df93719bd96aaf218feb09986665"}, "d301115a-e9e2-41d4-8ef4-239298a8f01b": {"doc_hash": "2959ed4c805b689bd3ec03b58ed9633c7dcde1486d690f436bf522f370c1694c"}, "c7c93a80-bd2f-48d4-a442-f9476fb24da0": {"doc_hash": "f8b430aa0759661ef74a0e0358ca44e15333a1bf4a221b8cbeab83f784f3d4ed"}, "39a9ae62-b1c5-445c-bdce-56579eaed8ca": {"doc_hash": "110e406053e918d2aa88029247e95524a535fba54154905ed037227b51920437"}, "4ff04fed-4514-4dfc-b571-81071d92b099": {"doc_hash": "ec9f70317435122d0decd58087d909cb7b6f8c97f38b353d22b0f6ba76916aa2"}, "873e4a57-6a46-44c0-a12e-6236181c8785": {"doc_hash": "47faa7a1fbaf86061338b2b4533084220e6c5f4176f6df490e89f550742984de"}, "2496d1c6-9b2b-49f7-a003-8821da552bbd": {"doc_hash": "6d0c4bcad95fe8dfdb4e002eaf2742a967c4ba7465cfedd170191d84829175c1"}, "36705235-1da1-4ae2-86c5-a85a73a99885": {"doc_hash": "bc5ba52df293fe17732b4bbe99993d8e306d1f87477b4369639bed53c9a03b55"}, "06fc06c8-f8ff-44e9-8fd1-44e8c080122f": {"doc_hash": "98c58f7271de8c8f8ea4f22387bdddd5a0f62b0d511699b3870fab746d6326c3"}, "eb1ea288-1922-4439-8a0e-0eacf9fa91ca": {"doc_hash": "aa3b6f397a9bd30b69975558ac7a405e4f7a87713651aa2f7d2e252754596017"}, "f214e935-e88a-4f16-8b6c-322da8c7fd8d": {"doc_hash": "d0a3dd8df47ab5680e0b5b821f0ebac38d8cf2df782b17a1197d87913644f35a"}, "9f4e4976-643d-4360-b0d4-7e9b0d53dad7": {"doc_hash": "bf82ae1f64c72b1b17f6eb3e791b7d8d020131927a4f45aaf356972304fac367"}, "c0550a62-ceca-48f8-8ecd-ba72c8bf34eb": {"doc_hash": "d5d594498b254b98ac2b9a9378f0220096259af5b32358e64cfefc0ead2b5f7f"}, "f43890a7-2424-4a9d-9caa-495f93aaf64d": {"doc_hash": "1003a89f0dffcc976b2ce7bf4f6bbf6b53b34014477d5504c928969b5f6c30d7"}, "921b172c-43a8-4c89-9cd0-799767c01a1d": {"doc_hash": "6058c09d217bb9b059d5a8eb733fa6cab9f25372adc1e1bc8d494f1775057718"}, "4da6a4ee-ba3f-4639-aadc-34cea1e31eaf": {"doc_hash": "52d84442e0f38395447b0624da0d972cbc0aebc9ffaa5b1aebe7784b78f31d7d"}, "1f5617ef-1d47-49f0-b2dc-15bb3bb3d189": {"doc_hash": "dd2d42c40c09583120fd553b9e168eb5d350b224515abc50b807317fccfd229b"}, "f4fec4b6-8d18-41c6-91d5-06eb51b0c54a": {"doc_hash": "141302ccb9019739ddc7109e8f6dedc78dc628661e4693648af5e8a190f20171"}, "4c33adac-a6a5-4429-9ee6-60eb9a0c3ff7": {"doc_hash": "b9fa1ab6152359198f3a90caf0d388b6ef0362ae59592cad436d7c02dbc42de1"}, "169b7fce-6f93-4b73-874c-2a417331140f": {"doc_hash": "7bc429cc8d69760cdec0bbdde0727c4e0acafd489d032527804fd46f04e44a4c"}, "2eb784f3-9897-4d1b-9f83-22671fdeff03": {"doc_hash": "9638046ee947db575aaae09c094b7181cbf800b867bf63815e7409ff67ae2400"}, "7ae83719-4bba-4afd-a83e-060cf4fdfdcb": {"doc_hash": "f25c86b24661c64fb97f76fd100c7d2cb9216e12f4020fc128d8f92f184c8be3"}, "3d65fc87-bdd9-4402-aa3f-476c741a027d": {"doc_hash": "3da8f64fdbfaa5ab503c3e8e246677650b054b3d9d27d1a60c97bc8226b26587"}, "f15f79bc-3338-4230-b32e-8066e96f4658": {"doc_hash": "a6f3c4aec97a840451b00c165dfcc4538a6cecba0f448fd4cbfcc4ed78845c4a"}, "d380d343-3218-4fe3-85fc-c9e63a014255": {"doc_hash": "f39605f0be4244229ad4c4e20aa7a8068e65701dc38847757552c97ec45d8e78"}, "2443acaf-f105-41bd-bc06-31804e919e80": {"doc_hash": "fce9ff9fc3211093f57587577dfae7e1546ed535cf252be9377d092e9eb3cfe1"}, "4c7387f3-70d3-48e8-b992-6de1d200eb59": {"doc_hash": "9b60fece1eab1a7ca284933030b1676eda792f551df1265b0012184f1716e7fe"}, "943a05e2-94d2-42aa-b373-edb0dd77318c": {"doc_hash": "8acfa2402163611bc84e435f2c4f4f513d3d2b38577ed872f2342cb9ede15816"}, "083a01f1-da0d-45c9-a49d-7cc0c400665b": {"doc_hash": "65df7ef2bba8999edc657f1d7cd0ba3b05b60b3bfb3051d7fbe1873f4abdb511"}, "7584767d-7224-4736-af4f-6f2219ba8d0c": {"doc_hash": "1a553434c2b374b1f6a760ba254c6978a347ba394f981b96389cc60289d6472e"}, "d7dbcf2c-5b2c-4933-9825-918f43472925": {"doc_hash": "6cb8ef4ea4c0d5e49dcf7ae494f92288d654c1b797fc4dbd856929d79dd8b9a8"}, "33337535-4cad-4258-8af8-1ee7c9674583": {"doc_hash": "af814a58a81bd2dee81a666737843cd291cf6f122f090f3ebf0b8fc0e70bd26f"}, "f4b8c2b6-834a-41e4-bb51-b985066fb04b": {"doc_hash": "cc8216a0932641b4ff6460f17d4ba52ec9bfe17ef797754c2a7220384e0ea012"}, "c423c452-ade8-400e-b950-28c87af9cadc": {"doc_hash": "ddcd8a908e9d78249608ca538b7fae40f6a1d67757f3137e308b7f3ecaf34b82"}, "2d16ad18-85f1-43a6-8723-49618376bdb5": {"doc_hash": "fa4a713644d27c4c5650a50b9ba4edf146a141c47c38037e08def0c4c6be5e44"}, "a00f8f0f-6b81-4ecc-893e-5eb375889dee": {"doc_hash": "e9313bc478927199a9cb8a850baa1907be6fa641702d18826fac5059b2c0a4cd"}, "f3a9f380-6758-4130-babc-2d86245b01e2": {"doc_hash": "b679ea3c1bfbbde155b65484f29c143c5b3be5cba5bc003e58fc455b1a5537eb"}, "13f275ef-b53e-4659-9c86-4842eb265bef": {"doc_hash": "439c6f6033333728ac4aea724cc0c2526f66130f14f20cdfc1528d234022940b"}, "3f3030f8-6561-4be9-82b9-763884267c9b": {"doc_hash": "28cd54043e1e7e119385f39894876bf70a08ead9b0386c0eb304509d9d4e7ee1"}, "b26c056c-83a1-416e-935b-3e833394d10c": {"doc_hash": "9d827e01bef489f5b7a5bd99227d7ea7cfc52635c3e9c5bf9b70e8aac9b711cb"}, "9f665ae9-270b-454f-9b3d-fd40563a558e": {"doc_hash": "87527aa9ab9b46d6a20ac25fd7b11b282ee8dc887424c8507378b41426d13011"}, "d8b959a7-6ea0-47ff-b705-59796c980a8c": {"doc_hash": "cacf33b454ce785e878a121b777c87db9b0073b4e99f897be71be065fa4d05b4"}, "219d4a39-3643-4bda-a4cf-5cd7a4569804": {"doc_hash": "e37dd031c568e489a314a2aca384065102bb4370287c7e3be38176183413c57d"}, "fe0a7a75-8ea1-457e-b538-8b37a476a4ec": {"doc_hash": "e97a86258bbaea88aa590ceb8d29e02aae84b418bbc20a799f8b127211f3ac81"}, "b106f951-06a4-48bb-9f2b-7119d4716d90": {"doc_hash": "7dcdc5d6f9299ae74ed4118b335fb9a7eaf7c4db5e0fdc11c80d9f7a451b6b02"}, "8ad93e45-74b9-48fa-8ff3-38411b888145": {"doc_hash": "511516efbffbb8c8c9f949666e211b097295be6e98752417ad710653bf89f53b"}, "55fe527d-3329-4e6f-bf84-c4baf834a864": {"doc_hash": "c98a48fecb1bd84bb01b238129f434bc324d1e948fba499aa3abe1798d47cdbf"}, "3f6a1c37-ac9c-4ca0-959d-8def1c23713b": {"doc_hash": "321593d2717130ef74d480ebebeeb9929e04eaa412f1dacaa842d9420592c5fb"}, "faa34f0e-85bf-45cc-a698-514a25af5155": {"doc_hash": "2fd949bafa6461ccf0970298a95dd40bc2953322a41452c1703fea2026d86068"}, "0b94fc15-6222-4cb1-928c-be4a13d3ee87": {"doc_hash": "836ec2d8a42ff47bc0133739ae842ab66ee9618ecc51c3799a83674694dfacbd"}, "27c64392-2f62-4cf6-a56d-a1c8ee8190a6": {"doc_hash": "e7a6afeac806e8953a2d958743ac6c703622e8487c66cbfda95f340e86b5c66e"}, "7378bbf9-2657-4f5e-a37c-900683965021": {"doc_hash": "c583f4457969f47faa198ea5c7d333a50c9584563234fbeb9e8736f13cdbb5af"}, "2935b93f-be19-4d06-afed-bde51e6b5ed6": {"doc_hash": "4a95e0cdcd05a2c32c1a3e28122a5d5ea3e6ee88f6d5fb9cd512442b2b472541"}, "af2e88d6-4f4c-4198-a874-7c505fc51771": {"doc_hash": "f840a43573e388d215420be2e3056acfd2b9ce15ad5c884047ef28623b1ac2b0"}, "92bec0a9-4d24-4438-8ed6-4f7236b91804": {"doc_hash": "672bd4f023d406573ab8077fc05eb87ed073aa91343de1ad80b5a7cd91091793"}, "a47e4994-2dea-4b82-bf1f-463547322c82": {"doc_hash": "c42794f337d4245c0a010b396b89138fd1d80cacabb26625fc5717432ef9e3b3"}, "763029d2-6072-49cf-b2c9-f9d7bcf0d6d2": {"doc_hash": "6b95b46f56a34894d866061b0325d9210a69bc7b62edf80619b57c9680e5f7e5"}, "cc6a2e2a-2046-4b2f-9baa-58a4cb347cae": {"doc_hash": "c7d23ac14a3026b78def0c2a15f774487edb30fcbc46ac648e73d38ee3b4c184"}, "4222efd5-7370-4c78-9a76-446b10365851": {"doc_hash": "7e26d873df7285073e318e0ee4c727f4406b15cd78fa69cb642cb34e06780a8c"}, "c2d79e89-4c6a-4ddc-8f40-c466fc2221f2": {"doc_hash": "d251e69c0b3e136dad8198e6194ae532661c9e7d203acfc7f6f241f09586b3ec"}, "465e7581-c1f0-4715-a8de-2dc7ee833fd9": {"doc_hash": "11e1c67299844c02ef06eedd1a95958e91e5a6395794754a2ea347685f55443c"}, "b2db136c-e2a3-4e55-b5ce-47ba3a38304d": {"doc_hash": "3430196bb1306b4fcdb04f37b261027e0c71c4780fe2019463fe3df5b648a238"}, "2bf39b9a-05b2-4ebf-8cae-bc514a359046": {"doc_hash": "985f694a5b378e3f3febac223e381b7b8baf3d91d3fbf2b846ca68f43c65b002"}, "2597f28d-d2c5-4956-9670-86aaa4b8bf6f": {"doc_hash": "72bd674c1bd977af14422a91744c7b1d6451f47c83ec433a2574e94d3a0d0c7e"}, "1dd8d531-b918-4cb2-9df0-6ca061dfd910": {"doc_hash": "d741c00da5eb2bd7f787448b42f7c34c19fc80558f9eee4d8bb45b5abbe62eed"}, "03e6c524-c339-4cef-9924-1bc08b57c83c": {"doc_hash": "5a09bdc34dd85c11832eddf531e643b28bba3771a0c9536befc62d1d3be34e78"}, "b19cdaa1-3b88-4d0b-9ced-2275b71cf776": {"doc_hash": "fb0667f068acdac0bb1051a7acf9a09c78d3071a5c7c2c58a0468517eb904371"}, "853881a7-32e4-44cb-94a7-5c1043187408": {"doc_hash": "524c5ccccd39b2ed881aff5db8755d98ac4a2be4b5172aa24ec792b903687175"}, "2f8c7865-1274-4f95-a8fc-c997ac18bac1": {"doc_hash": "67d21af345ae06d523fa6f57acef09c227e9606a1db2c6063f32b252a74261eb"}, "edf98e59-107d-496d-888a-3058500d131b": {"doc_hash": "b4a21d23d13b2517284f0c524eb8091b31dba2bc6afe9f36a5dda03de899cb5e"}, "6467d30e-337b-48e4-9b8c-aada239aa0e2": {"doc_hash": "508c4d7fd0a9ae5e3c932abda84a8fc643fa6e30ed804f2404851159f74438bf"}, "7f58c049-a706-40b0-999b-1a1ff7dbf7c1": {"doc_hash": "2539e4185f814e5095dd2c5ca46f43ecec1c82359ac33ff9146c25f02892a442"}, "0356be8b-a14c-4bb8-a94d-702c5e8afc09": {"doc_hash": "c4d2deee98ae8fce56d554e8c76e81c6672d2002a1c2c12744f26e5895404ec2"}, "710656cc-e76e-4fe0-9773-4b9fb4c1c57c": {"doc_hash": "fbe64d097f32a91e3e2ac672983240646f44531eefc66c7055d4d3e4216ab256"}, "74036718-21f5-4163-935c-42ac417bba8d": {"doc_hash": "4e5625d98b99c1179df01ad8f1eafe9111b0bf73ee5352a242b53db484b270b8"}, "adb80a98-b6c6-4014-b215-d9acdf68c8bd": {"doc_hash": "58d75edac6d2c050561f6550e488aaf4497a0a5a0d5f76bf37045948ee2bf03d"}, "29969142-c2b3-4f4b-a998-db7822056f49": {"doc_hash": "4bdd6b1409e3480a5bd756c549bf4e5c1e7b22217bdec664c8f06c52647b00fc"}, "111fcca9-408c-4ace-980f-e057a67b094e": {"doc_hash": "d3b402b4adacf156ed16051e1148363478f03f4657131555514eaf77023a1446"}, "b35c06b6-0e2d-4b1c-a785-f4e152fd92d6": {"doc_hash": "3e2b9475ab10db7f157f09944730b25857956bf7bdb1d398c7aa0a86f4a8b842"}, "cb8e9a9b-3770-462b-bd0e-2f4535d694a7": {"doc_hash": "df33022d76fcf0426967448a46a2dfb9e2dfbeba1fb0253246b4e880dfcb40ff"}, "fba53a3c-a56b-4a90-82cb-b473948e5bbb": {"doc_hash": "e5fa02f2f547aa47954ae7eb32702fa9d562400546b3ea76299b6cfe307a448e"}, "387264ba-7376-4921-86c8-b45a3f4caa5f": {"doc_hash": "a0f2f11eedbe20209259ecd42cb790350beec16fb887b74849863e13deab7ae3"}, "7a62c91e-287b-43a1-a4d8-09793d9ae9dc": {"doc_hash": "f5d7faf119a541fb1aaa030ac2a9adb0708340315e5556ea63cbaf3e501ff6d6"}, "1c4d1404-c71e-4684-979e-da943a6dd37d": {"doc_hash": "ae95a06dc8df38935213bdb2cec07e9362829ef47113945658484b1b0a67259a"}, "4a968bb4-11d7-45ee-b47a-ad2983a8db5e": {"doc_hash": "61b2a0451e237c05ec304fbf58b56b3028f772c09840c32563bb19fd67428f08"}, "9d528af7-c87e-4345-a21b-56000b061d61": {"doc_hash": "4f2edf631f6c4ab1680e072eff340fc37c495e91c13c6be612e74d9eb1943462"}, "cde89207-df1c-444c-bd42-0fd26ffa112f": {"doc_hash": "00c1be7cb64fa0f4e023ae9f5330dad1d3a9900fa807b4872d9eacf50763eb63"}, "9c65e003-b383-4325-abf0-be6b1f0af262": {"doc_hash": "c305e32c4c0049723860b5db01b965e878ac5a4b23ddb34f12bd87905988d653"}, "c8d998fa-8a98-4583-89ca-671e5afbc0f6": {"doc_hash": "5a8036e543ddb4e1821e12b3eec405edf6b77731c4377d1ca5468551e6fd0ece"}, "d05b6021-49a5-43ae-8d9f-03b67ed1a2dc": {"doc_hash": "a3070d16cce8a799d853ee5eabcc031d6eef8fd147597a3468af989910ace0c4"}, "95aeffc1-fa7b-4586-be81-6fdb1805b1aa": {"doc_hash": "23749fabd670c414e52e293627e896f96f3c297d42aeb0d2ea5272786b5df952"}, "944d66cf-2ac0-408f-bb5b-c99144087de8": {"doc_hash": "6769b569661fdd073a142f0c0a70ea35b1fdc2ce4a3d8689d27bc199a983ea4a"}, "da01ddc4-f23a-4dbf-b275-d153e3f696f3": {"doc_hash": "d3ad03fbb130ea86e1203046bc727cd09ed869baaf57258a5e0af856765494fb"}, "16351b1b-7a86-4b84-bdb3-2e3aecd4654e": {"doc_hash": "cbb71d20dee80b1c411d5a2e441c0fe57047c13b26713030493029c12413e8f0", "ref_doc_id": "50d3a96a-7c9f-451e-b53e-253dd074b888"}, "ea0a0caa-7e4a-402e-9431-4bf3031f8da6": {"doc_hash": "62a2b0d8538c6db50cb3a76c78d2fbec36e97f39737729ee6352c1ece788863d", "ref_doc_id": "bf39f908-54a3-4ac5-a19e-a40be66f192c"}, "7a4674e4-9a91-4fb7-a79f-2f84227d47e2": {"doc_hash": "9860d3e15f22294e605aef72edaebaca5d51a49e125a1b95ebc89dca8bee53e5", "ref_doc_id": "86633b27-cb2b-4a77-8626-94a10383016f"}, "d324b0fe-baa5-4da3-9416-5791ed80e7d4": {"doc_hash": "79d7b4906cd01853730365a12ee8caa385148573b86a7e2b21d845a54ea0489c", "ref_doc_id": "d301115a-e9e2-41d4-8ef4-239298a8f01b"}, "c261471f-5bba-42f7-92e6-0c77a7f55055": {"doc_hash": "e51d577a1e872f80bd4970149fe7855e3b9ca404296b6f669238d601cb734766", "ref_doc_id": "c7c93a80-bd2f-48d4-a442-f9476fb24da0"}, "71e04240-349d-4e04-9953-e3ece006d87c": {"doc_hash": "bd3e35e73d12b55f305960dcb0afc3a519e43997da65e2bb0cc141b2e3e62f36", "ref_doc_id": "39a9ae62-b1c5-445c-bdce-56579eaed8ca"}, "4e90cd9c-c9d2-45a2-af42-74a269fe6b3a": {"doc_hash": "c8b06c027d0301458902e851f87471ecfe385ffeba9c00890a9a481efd72c63c", "ref_doc_id": "4ff04fed-4514-4dfc-b571-81071d92b099"}, "2393dd5b-45f9-48e1-b8b4-1f9069a4be17": {"doc_hash": "c8799f9f66222303bdf9ca42fab5a9168f7556d405703169995501602e7970f6", "ref_doc_id": "873e4a57-6a46-44c0-a12e-6236181c8785"}, "d3a5a4b1-3aff-4709-af93-0e6ed9984888": {"doc_hash": "3af8253fd2856e4a91f7ec08b79daf4f37791bf7ca86616c703c512bc28fd309", "ref_doc_id": "2496d1c6-9b2b-49f7-a003-8821da552bbd"}, "ad727fcc-7086-4904-a6d1-d35e6f8d7b29": {"doc_hash": "bd464fd0b89f2755e53dfe2afce562e288819d9c25321e3c9ce366accc513d77", "ref_doc_id": "36705235-1da1-4ae2-86c5-a85a73a99885"}, "6c810b66-d50b-4a29-922a-f0c4f819e668": {"doc_hash": "60c7d7e2ae05079046483f8188fcc2ad6234c096320c53aed8d49df254aacb35", "ref_doc_id": "06fc06c8-f8ff-44e9-8fd1-44e8c080122f"}, "69664c8b-732e-43a5-9bbf-d9041e928a9d": {"doc_hash": "566cf1a45616f566c41d83eed8ffb90e172239c3e7f56fe08fdda3c3145e11a6", "ref_doc_id": "eb1ea288-1922-4439-8a0e-0eacf9fa91ca"}, "29dc13bd-1abc-454d-ade2-1a3244f6dbb4": {"doc_hash": "060ba4268e4d7b977c2cd1e3cf2711686dc8dcb0c81141ce8d8d08a927244fe0", "ref_doc_id": "f214e935-e88a-4f16-8b6c-322da8c7fd8d"}, "f58ed654-3579-424f-b6ad-38269bdbc3c5": {"doc_hash": "829f0f16508dad2fd21ac5d41cc4894e7e428955eb8b3f9c5286b636488650ec", "ref_doc_id": "9f4e4976-643d-4360-b0d4-7e9b0d53dad7"}, "bdf8438c-06c1-4baf-acbd-5123cb0c6894": {"doc_hash": "1f50304d4cfad7c569588c2aa76a7f4ff4ac9723a4ffbd7757236690541e4e6e", "ref_doc_id": "c0550a62-ceca-48f8-8ecd-ba72c8bf34eb"}, "778b178f-97db-4a1d-9b57-18ec0a18ddfe": {"doc_hash": "45a74ea2c075f93f6823cc7bc5599af74adc7291ad729cc5ef1b69ac14f5972e", "ref_doc_id": "f43890a7-2424-4a9d-9caa-495f93aaf64d"}, "f614d8f0-e767-4a1a-a86b-9bdabdb442ae": {"doc_hash": "a0a26f1fde106d50aa267bce4b3bfabce12abc626f10efa5a3fb7588bd2885f2", "ref_doc_id": "921b172c-43a8-4c89-9cd0-799767c01a1d"}, "b3406969-6622-4717-ac8d-edc7f61c3c20": {"doc_hash": "87b43c6d80dde4b0e7425c3591fbdee28917f32c026cc39deb1d58e1b75ec203", "ref_doc_id": "4da6a4ee-ba3f-4639-aadc-34cea1e31eaf"}, "d507f3b1-b2ca-4cd4-bd98-5733f209c3d2": {"doc_hash": "13a3a42f7d3322431e64299a77bfd5917b1cfa58dfc52ab73dfd86fec02b8b69", "ref_doc_id": "1f5617ef-1d47-49f0-b2dc-15bb3bb3d189"}, "63660b82-97db-49bc-9bb7-0b1372c3b6ad": {"doc_hash": "fb521cf8bda21519eb7ac2d96e6c3fb0094a8ce7bff91dc8cbab2adc5e3ed579", "ref_doc_id": "f4fec4b6-8d18-41c6-91d5-06eb51b0c54a"}, "7ff510b9-f0a8-4bdc-91dc-584ee7b3180a": {"doc_hash": "dfd3ed8cf7e7a6dc6839b25d892f8ead2901195960b1b2ca8420a6dd4bd4615e", "ref_doc_id": "4c33adac-a6a5-4429-9ee6-60eb9a0c3ff7"}, "329860a1-11ce-4971-9533-9340c5a3d2f8": {"doc_hash": "f23683e80072a3c9ee284fb129a1ca4e64410a2417fffa43f660bcc354619600", "ref_doc_id": "169b7fce-6f93-4b73-874c-2a417331140f"}, "320bd439-bb44-465f-bfc2-7430da6691b6": {"doc_hash": "6107172db4e7d9903e17ca502fccb980c46003b04d26f74591a6bfc33934e943", "ref_doc_id": "2eb784f3-9897-4d1b-9f83-22671fdeff03"}, "06d45632-74f2-4373-9905-6ac6428dd2c7": {"doc_hash": "9190de9652e9e4fe89f69f5b9221e3a9e2ff4e90434643d8fd3deec6dae5da7e", "ref_doc_id": "7ae83719-4bba-4afd-a83e-060cf4fdfdcb"}, "53c70e53-4949-4a9e-adb8-b32fb8d80ae1": {"doc_hash": "a5f78afcd56a9f4b8bec342811d2edc031549f16b2ffe76ab4e3b74657dcd819", "ref_doc_id": "3d65fc87-bdd9-4402-aa3f-476c741a027d"}, "2d3c7298-a80e-4d0a-b6f6-5d10751cede3": {"doc_hash": "fefb77c60dc4d84d2723dca69dc373b0446d474e8ade5b7f5dd23adf84e85a5b", "ref_doc_id": "f15f79bc-3338-4230-b32e-8066e96f4658"}, "5897cd5e-9483-41cf-b4d6-a33d6c6ff1c2": {"doc_hash": "6cba20d67bec71b21e01ad4d29d33ff5c648c21eca664cdc7a75307d17d6365e", "ref_doc_id": "d380d343-3218-4fe3-85fc-c9e63a014255"}, "ea748d3d-3030-499a-bf19-ee089970e992": {"doc_hash": "1170f34d1093c21bc09eb5a82268ed5dc0115efee00aae3e5c1a745a469bec66", "ref_doc_id": "2443acaf-f105-41bd-bc06-31804e919e80"}, "7f0a2a42-e066-4136-bb43-a353568638f3": {"doc_hash": "2783a997cc8ba5b41ec0f063ce1da2f15de523fa23ad68ee0205cb855370d81f", "ref_doc_id": "4c7387f3-70d3-48e8-b992-6de1d200eb59"}, "108c7b0a-43d1-4701-b27a-54b0319f83c1": {"doc_hash": "e0f059c0df89211427c331a416fdceb4d4fec09093554f0efc92a12be2f4e4c9", "ref_doc_id": "943a05e2-94d2-42aa-b373-edb0dd77318c"}, "35be786e-65a4-4028-9aa8-ae6e552a8296": {"doc_hash": "a9afdbd782f773682286a1879c3c305bb705796daaf0e86491857c28ba9ec3b5", "ref_doc_id": "083a01f1-da0d-45c9-a49d-7cc0c400665b"}, "0fea4ee5-9d0d-466a-b54d-671b6c470fd4": {"doc_hash": "03f47983988e849cbd567aa2fb5d533e2c761d5a232257d82cfe9e3488f5ae52", "ref_doc_id": "7584767d-7224-4736-af4f-6f2219ba8d0c"}, "355fb1ab-685a-41a7-9665-8767d67cabcc": {"doc_hash": "7d1e556c2b1992a0930512b67f858bea4d5d8afef824003f5524c07ce2ed8fa4", "ref_doc_id": "d7dbcf2c-5b2c-4933-9825-918f43472925"}, "08e2e369-2067-45e5-8827-20ec850e1195": {"doc_hash": "e66a03692806ecf91a1f9af1603c8ea34e4e59894e951503c1ca0c6b90482e7c", "ref_doc_id": "33337535-4cad-4258-8af8-1ee7c9674583"}, "e93ca347-6cb0-4efa-b36d-1c42f5967f43": {"doc_hash": "14bcfa734e22b01c9782e93d1e42c527b6b0fd5e94b892209ced77dbe40d328e", "ref_doc_id": "f4b8c2b6-834a-41e4-bb51-b985066fb04b"}, "70ecd1a6-b71d-44fa-a62b-2d9951127053": {"doc_hash": "66ada8c72eee19a2e7abe7fc4e721fb6076cf501f5c2fc3a316fb17cf6d2bff1", "ref_doc_id": "c423c452-ade8-400e-b950-28c87af9cadc"}, "e6da2920-f573-40a3-bce4-295393918c88": {"doc_hash": "9ba36df127c6b52e88cbf4cf5909d8f9289057276b3ef14cf81741642ec45ad7", "ref_doc_id": "2d16ad18-85f1-43a6-8723-49618376bdb5"}, "524fc683-5345-490c-a469-6b25c5e0581e": {"doc_hash": "d8ffd734426f015d1960acec9e9a995847726b396afb11b6f4075538981ad4fd", "ref_doc_id": "a00f8f0f-6b81-4ecc-893e-5eb375889dee"}, "8aa3bf7c-1622-40cd-9c62-96d8fb2972ca": {"doc_hash": "11391bd17ce54533bc2d651cd85833395af987fe93879b469f7aeb62fa7de919", "ref_doc_id": "f3a9f380-6758-4130-babc-2d86245b01e2"}, "472305fd-42d2-4bca-8ad4-3af8d032f9b1": {"doc_hash": "78acbfb870733b66bcc28a4d505f32e6953260356eca6aa20bde6b1cb1b7d4e9", "ref_doc_id": "13f275ef-b53e-4659-9c86-4842eb265bef"}, "1fa302cc-34ae-4b37-a51e-949159c94117": {"doc_hash": "4e17304d3fc50936847ec9d5fac3bf6158855fd6ee8bda33866c95cc202a023a", "ref_doc_id": "13f275ef-b53e-4659-9c86-4842eb265bef"}, "d70fa4dc-fc46-43f2-9104-b091021a2cc0": {"doc_hash": "008c824a91a8b560e5107a6423c18625ca2cc81add3e54afa6c874ebb02b74b0", "ref_doc_id": "3f3030f8-6561-4be9-82b9-763884267c9b"}, "0e78c570-d9d9-4815-b58d-e025dcdaac2a": {"doc_hash": "bdbde83f33f7f94fedc547ccab550be08ec7db19412856f85dd5729c2275a601", "ref_doc_id": "b26c056c-83a1-416e-935b-3e833394d10c"}, "8215d805-b52f-4773-8991-083d5e22415d": {"doc_hash": "2cc60fedb767747b749076193f7d4ff450117053fd676d3948da7345d2fc2f25", "ref_doc_id": "9f665ae9-270b-454f-9b3d-fd40563a558e"}, "5377e3fb-af99-4b80-bfe1-c6f76e76553e": {"doc_hash": "ae4fc9b170ca5f0f0a4c8d1fbe27334de2cbfd4d798d96fc5d1a617e66d1e215", "ref_doc_id": "9f665ae9-270b-454f-9b3d-fd40563a558e"}, "f5e0467c-f514-4ac8-b3b1-1f248bf0bf59": {"doc_hash": "3d84fc728974439454bef48a0fbe81e0fd5339cbf7493c9df916c4577f1632b3", "ref_doc_id": "9f665ae9-270b-454f-9b3d-fd40563a558e"}, "b69d42f0-d4a3-485d-a759-6456173c4bc2": {"doc_hash": "f0a2f54968270e578300352919cab2dbb19fb986ef737ea5d261b9f98a00ace3", "ref_doc_id": "d8b959a7-6ea0-47ff-b705-59796c980a8c"}, "f2d9b37d-8a69-4c0c-956a-6c839891bb51": {"doc_hash": "caf17bb814cbb26ff9e7c72d4a2d099d7c62c5a912ffe66fa41147ecb3153387", "ref_doc_id": "219d4a39-3643-4bda-a4cf-5cd7a4569804"}, "226651d2-ce5f-46de-86a3-dc9b08dbc479": {"doc_hash": "a86a5ef684ddce25ed290e52661a53efa61eb9d95e93e77612d19c50231416d9", "ref_doc_id": "fe0a7a75-8ea1-457e-b538-8b37a476a4ec"}, "19722d02-a37b-4b94-94a9-0d12996aa41b": {"doc_hash": "df1a2717cea8f1c7381c479f52ca8b2d026916f2a20018542919627a5c8de47b", "ref_doc_id": "b106f951-06a4-48bb-9f2b-7119d4716d90"}, "50f403b8-07ce-4a0d-b4f9-0ec6fd104710": {"doc_hash": "4accc2cadabe410272ab49df43eda5a9367c4d8ed1738b3c72caac3c7f7e0e42", "ref_doc_id": "8ad93e45-74b9-48fa-8ff3-38411b888145"}, "bee09719-9a97-468c-86e5-54ba0f1cb1b0": {"doc_hash": "4d1616fa0465d63c39c00053534b36b5bf4743529b1b0463014578745d8928b9", "ref_doc_id": "55fe527d-3329-4e6f-bf84-c4baf834a864"}, "b99f2474-60c9-4892-9174-55542c7cfc5c": {"doc_hash": "6646917e8ac4ad513ee78bcfdfb692c36c3ae2fa4a660e4133f4926a90ac5b75", "ref_doc_id": "3f6a1c37-ac9c-4ca0-959d-8def1c23713b"}, "27f86070-3625-4cbe-b497-c9abbc8a3f9f": {"doc_hash": "b8f76c2a70b458f9d13515ca3b5c24be8f1a383d3ebf7cb6e9234ec84dd7eecf", "ref_doc_id": "faa34f0e-85bf-45cc-a698-514a25af5155"}, "2b5af032-49b2-4090-920e-442fa0280619": {"doc_hash": "1e2194bfbdd47384d5f53bc8d7c7ca43a4a49e5f8373c7adfe07b6f682e9613d", "ref_doc_id": "0b94fc15-6222-4cb1-928c-be4a13d3ee87"}, "bc7573b3-db47-4c6e-92d9-6a0ae502d62f": {"doc_hash": "1095431cc20c4cc0e189bc49ac0af39508e9629cd735e0727aa6ba2ce5ea54df", "ref_doc_id": "27c64392-2f62-4cf6-a56d-a1c8ee8190a6"}, "ff96e26d-1e8d-4deb-9dea-48701b681f93": {"doc_hash": "414d114fc16da7af7d26f80b9eaab240475b877aa412988865bcca13a89c1dbc", "ref_doc_id": "7378bbf9-2657-4f5e-a37c-900683965021"}, "f73a297b-1cf4-4ef0-a7c0-9b0682cb56d7": {"doc_hash": "7447eae3f151e69de13addb3b9a46f25359624d9949aa2fac2338c60e73000a0", "ref_doc_id": "2935b93f-be19-4d06-afed-bde51e6b5ed6"}, "3b1903a5-addc-4f57-bcdd-f37d73cda0d3": {"doc_hash": "d990c93288f058c085e30c67659a5f3919f3ce3eea458d4f20cc1061586b4b6d", "ref_doc_id": "af2e88d6-4f4c-4198-a874-7c505fc51771"}, "4d5e9280-5243-425e-a250-53b0ed4db9de": {"doc_hash": "a7f083e133e3a7909a1cabab6d3f2c1f561153a890bb127ae237bc5746bc9462", "ref_doc_id": "92bec0a9-4d24-4438-8ed6-4f7236b91804"}, "46471b8f-aa71-4041-a8ac-10aa499efb51": {"doc_hash": "b02fede379018b8060907379cc5e90d25b2b39ad4b4849a7ecaf0b18d9fb8732", "ref_doc_id": "a47e4994-2dea-4b82-bf1f-463547322c82"}, "5c5b2766-6d13-4d8c-850d-6d802f0a4399": {"doc_hash": "1b8d01360853afe67d7c6e40e7e857a6ad31352ccebfd9be4f7e5c2377bbfb31", "ref_doc_id": "763029d2-6072-49cf-b2c9-f9d7bcf0d6d2"}, "a4e8fd0e-dca2-4388-be34-16efdc862659": {"doc_hash": "64156c11965abc66780428df121c67aefbd0ec57ee9ca42d3adb98eac78aa4b3", "ref_doc_id": "cc6a2e2a-2046-4b2f-9baa-58a4cb347cae"}, "6946d20d-94e8-433d-98cc-43c930b95bbf": {"doc_hash": "1bcfa645d3ef5998223ced7b86b76378697536ec9e34ef20745219740444c078", "ref_doc_id": "4222efd5-7370-4c78-9a76-446b10365851"}, "ec0a3b13-5f98-437a-80ac-e503fdf7fd05": {"doc_hash": "fa9090e5bcfd9d3f2c1374561ba7b00a12d9a1c8cb82067d7804057e415c4559", "ref_doc_id": "c2d79e89-4c6a-4ddc-8f40-c466fc2221f2"}, "66135b62-3551-412d-845d-a88665753b70": {"doc_hash": "c94aa4a254e7a05238ff4d3942f61e54036858dafcc91cee9b0b2ea931072e92", "ref_doc_id": "465e7581-c1f0-4715-a8de-2dc7ee833fd9"}, "d7d2e543-06d4-4af4-a782-abfab8a0816b": {"doc_hash": "66e5d22f36d290cf84302b648b6057722a09b63b2097b9ff64980176ea339d0a", "ref_doc_id": "b2db136c-e2a3-4e55-b5ce-47ba3a38304d"}, "98c7ce70-e383-4774-bfc1-55bf09884454": {"doc_hash": "63daca3d7183617484b59c9656227193be385a95bdc1e550e47c4ad0f80f2f92", "ref_doc_id": "2bf39b9a-05b2-4ebf-8cae-bc514a359046"}, "2878d5b9-95d6-4e12-a7f3-b158d7b77fe4": {"doc_hash": "e772ea39a721a89db7d804e7c3997a8c156f0b1a0018063ce150fc91e66647cd", "ref_doc_id": "2597f28d-d2c5-4956-9670-86aaa4b8bf6f"}, "1e2d3ac1-493e-41b1-b7ae-a3e0a98b840d": {"doc_hash": "51b769ae055ba359dde0233f04199009913e4432cb387d2bef1fee18c07cdc56", "ref_doc_id": "1dd8d531-b918-4cb2-9df0-6ca061dfd910"}, "e8e4ae08-4a75-4948-a06a-9c757bc72310": {"doc_hash": "29b3cf74933444807acbf8c1435c91a4efbc4715644dcd7df5f2e3571cbd75e4", "ref_doc_id": "03e6c524-c339-4cef-9924-1bc08b57c83c"}, "d6495f07-a212-4df6-b5c4-f92a075a995a": {"doc_hash": "275925adea81325b2f8cd76e92f46cae7ffce7b566a44ed61c94c2c4307e9604", "ref_doc_id": "b19cdaa1-3b88-4d0b-9ced-2275b71cf776"}, "0d0f821d-fe2f-4278-bd18-8081c83fd468": {"doc_hash": "4842b56d866d6e51e3aafd38fe4e575615133274222cffee9f8d718e58758225", "ref_doc_id": "853881a7-32e4-44cb-94a7-5c1043187408"}, "0be5c4e5-f500-486c-b82f-4ecf0ad05110": {"doc_hash": "7d4fe81e264959089c42a4532cfd63f86fb6ad1d625941847d38cc950d6e437e", "ref_doc_id": "2f8c7865-1274-4f95-a8fc-c997ac18bac1"}, "306f3dcb-8e88-4784-8dd9-724e2818452b": {"doc_hash": "65f456f1c2e862cf0c6464774fae703fef81f6d9bd2bc2d82c30625f31e0d4b7", "ref_doc_id": "edf98e59-107d-496d-888a-3058500d131b"}, "2e6af211-344f-4721-9c9e-80834eb2250f": {"doc_hash": "54343401c093a689755c0b8d02e4ae56ed3c2323d0ec4899a7e896b637369dbf", "ref_doc_id": "6467d30e-337b-48e4-9b8c-aada239aa0e2"}, "713ecc0c-d3a7-47c2-a37f-7e24734872f6": {"doc_hash": "baa1f74b8b2e93888e57ef2e944edd79cd0ad851880654077b886f69cf5a02c1", "ref_doc_id": "7f58c049-a706-40b0-999b-1a1ff7dbf7c1"}, "7981f459-ca40-4a08-997a-da7fa70a62a9": {"doc_hash": "503856cd94d96dfa92acad5925e1856ac15066b65042b4bc9398887bcf62830e", "ref_doc_id": "0356be8b-a14c-4bb8-a94d-702c5e8afc09"}, "860e7ca5-e8c8-43b3-bbb3-72256ab6d0a6": {"doc_hash": "a8425f4f53b159b6ee54accac226fa2d62c0399ca4f50327d9eacd3d11fa3762", "ref_doc_id": "710656cc-e76e-4fe0-9773-4b9fb4c1c57c"}, "243a7bd4-59ed-44ec-bf13-8167446db648": {"doc_hash": "d99fca1d9bb244e3d742329e71d2d0afc131226be32bf1c396504d8413183f63", "ref_doc_id": "74036718-21f5-4163-935c-42ac417bba8d"}, "baa7c38d-9dde-4df9-bfc8-a48b88b3418d": {"doc_hash": "67c958105b99e50c2910ffccbd17a0b78c7c201c3af0e67974d6c9f8de5d7af9", "ref_doc_id": "adb80a98-b6c6-4014-b215-d9acdf68c8bd"}, "bb50d151-6d93-415f-be37-3e73f5022290": {"doc_hash": "f4339b76d65237bcb1f52e7d3655459adba1c844955734909ce7c65171638189", "ref_doc_id": "29969142-c2b3-4f4b-a998-db7822056f49"}, "1aca6b69-b6a0-4726-8ce3-14343bb06b7d": {"doc_hash": "2673b3a30ab56844c85147c601ec355e11587c7a80f97a8a43c0d7288f251b49", "ref_doc_id": "111fcca9-408c-4ace-980f-e057a67b094e"}, "4b772579-18e5-4a12-a533-3a62d0080927": {"doc_hash": "77e8fa42775faf81181de07afd15dd8942e7c12570060de22430ea3b65bb13b3", "ref_doc_id": "b35c06b6-0e2d-4b1c-a785-f4e152fd92d6"}, "3b7d9e5c-e03e-4888-84bb-4975fa0b1ad6": {"doc_hash": "d26ac24e86a15da3e42267dd8f8027a280a17351457f599b14605b723a745e10", "ref_doc_id": "cb8e9a9b-3770-462b-bd0e-2f4535d694a7"}, "f58fbcd3-fb3a-4ed1-8217-1f4ba28a7998": {"doc_hash": "545c6d4002e68e3c2aac7a9d6ec61ae60cc6818bee41258a6cbbc7456108670f", "ref_doc_id": "fba53a3c-a56b-4a90-82cb-b473948e5bbb"}, "5f0c6715-040f-489e-a0b7-89a5369e65a8": {"doc_hash": "43e58e8d22acf3b8b7455656eedbf7cf262036414424782767eb3d7c60533dea", "ref_doc_id": "387264ba-7376-4921-86c8-b45a3f4caa5f"}, "978e1564-89cb-4623-b580-0f7cab175e0e": {"doc_hash": "79a7e6feb354f16ddb3438417a3ab33caf37113b9996c13d294380c9c215f3d0", "ref_doc_id": "7a62c91e-287b-43a1-a4d8-09793d9ae9dc"}, "21d5824c-a3d4-4ac7-9f60-ab034336ee4e": {"doc_hash": "47950261af759b9a22b46acfe88af51c5e6c0635359b1710c474b33b0a6af2cf", "ref_doc_id": "1c4d1404-c71e-4684-979e-da943a6dd37d"}, "6d672c73-7078-4c77-b2b7-881d9f4600f7": {"doc_hash": "762a8ece13a6805773116079f6e65de1a12c51614b3110e7a2412abb0f58c0ab", "ref_doc_id": "4a968bb4-11d7-45ee-b47a-ad2983a8db5e"}, "97c9b562-964d-42ff-894d-063889907caf": {"doc_hash": "9e81003b7f2dec98f5b3a693ca718749b924e3838a270f109a4e9c23bfbb6b77", "ref_doc_id": "9d528af7-c87e-4345-a21b-56000b061d61"}, "10d8f21b-682e-46f6-81fc-a3f4f2e14d10": {"doc_hash": "583273a42c80ae25aaa5b154b8a0ae1e5b8f804f650f350774086d4cb71e20e7", "ref_doc_id": "cde89207-df1c-444c-bd42-0fd26ffa112f"}, "0cc786f4-2949-4f8b-a280-140b9dd1e31c": {"doc_hash": "c8cd6012d0c3e6b52d52f1508440bdd37d6b78fd7b03c7da5319ed11ee1570e6", "ref_doc_id": "9c65e003-b383-4325-abf0-be6b1f0af262"}, "350d6976-6f36-477c-a528-eda131eb74d5": {"doc_hash": "42c535115cfe84ce415a81583a2b8fa68f700a6ab5ed0329aeb2be4cefc883d4", "ref_doc_id": "c8d998fa-8a98-4583-89ca-671e5afbc0f6"}, "a2f9c8af-9076-41ff-bbba-817dcc89ab88": {"doc_hash": "b3d36ea7b6ee921a2f4f73f1b52dfdd8616c69febb1fa77c042df15cbcd35489", "ref_doc_id": "d05b6021-49a5-43ae-8d9f-03b67ed1a2dc"}, "717d2298-1525-42be-8bb6-e4c3a47e9c25": {"doc_hash": "96895acb335ddb47dc9db76cf83783ad85c25020c19487520b2e318df44e9407", "ref_doc_id": "95aeffc1-fa7b-4586-be81-6fdb1805b1aa"}, "795e39c1-d1e5-44b4-aa5f-0ac03586ac0f": {"doc_hash": "c0c9c50c8addeffdcbe7b794af8891f53576e82fb1388becd19ff59454bf180e", "ref_doc_id": "944d66cf-2ac0-408f-bb5b-c99144087de8"}, "cd092dfb-e314-40d3-8721-5670ec22b5aa": {"doc_hash": "eac82f5d23e9421416d8a2a9087d29e7e7f930a74c720fad28e167f4464ced80", "ref_doc_id": "da01ddc4-f23a-4dbf-b275-d153e3f696f3"}}, "docstore/data": {"16351b1b-7a86-4b84-bdb3-2e3aecd4654e": {"__data__": {"id_": "16351b1b-7a86-4b84-bdb3-2e3aecd4654e", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/_index.md", "file_name": "_index.md", "file_size": 2288, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "50d3a96a-7c9f-451e-b53e-253dd074b888", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/_index.md", "file_name": "_index.md", "file_size": 2288, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "9b6ab778849e0f626574efeb11e2a7603cb0a1fddcb3ae35329e495467739ab0", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: Get started with Streamlit\nslug: /get-started\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea0a0caa-7e4a-402e-9431-4bf3031f8da6": {"__data__": {"id_": "ea0a0caa-7e4a-402e-9431-4bf3031f8da6", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/_index.md", "file_name": "_index.md", "file_size": 2288, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bf39f908-54a3-4ac5-a19e-a40be66f192c", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/_index.md", "file_name": "_index.md", "file_size": 2288, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "1967db3df96d2aba9e199229c76d8789c269afe82c2da0e933713d3d13cb3e7a", "class_name": "RelatedNodeInfo"}}, "text": "Get started with Streamlit\n\nThis Get Started guide explains how Streamlit works, how to install Streamlit on your preferred\noperating system, and how to create your first Streamlit app!\n\n\n    <InlineCallout\n        color=\"orange-70\"\n        icon=\"downloading\"\n        bold=\"Installation\"\n        href=\"/get-started/installation\"\n    >helps you set up your development environment. Walk through installing Streamlit on Windows, macOS, or Linux. Alternatively, code right in your browser with GitHub Codespaces or Streamlit in Snowflake.\n    <InlineCallout\n        color=\"orange-70\"\n        icon=\"description\"\n        bold=\"Fundamentals\"\n        href=\"/get-started/fundamentals\"\n    >introduces you to Streamlit's data model and development flow. You'll learn what makes Streamlit the most powerful way to build data apps, including the ability to display and style data, draw charts and maps, add interactive widgets, customize app layouts, cache computation, and define themes.\n    <InlineCallout\n        color=\"orange-70\"\n        icon=\"auto_awesome\"\n        bold=\"First steps\"\n        href=\"/get-started/tutorials\"\n    >walks you through creating apps using core features to fetch and cache data, draw charts, plot information on a map, and use interactive widgets to filter results.\n    <InlineCallout\n        color=\"orange-70\"\n        icon=\"rocket_launch\"\n        bold=\"Use GitHub Codespaces\"\n        href=\"/get-started/installation/community-cloud\"\n    >if you want to skip past local installation and code right in your browser. This guide uses Streamlit Community Cloud to help you automatically configure a codespace.\n\n\n<NoteSplit\nbackground=\"gray-20\"\ntitle=\"30 Days of Streamlit \ud83c\udf88\"\ncopy=\"30 Days of Streamlit \ud83c\udf88 is a free, self-paced 30 day challenge that teaches you how to build and deploy data apps with Streamlit. Complete the daily challenges, share your solutions with us on Twitter and LinkedIn, and stop by the forum with any questions!\"\nbutton={{\n        text: \"Start the challenge\",\n        link: \"https://30days.streamlit.app/\",\n        target: \"_blank\",\n      }}\nimage=\"/30days.png\"\n/>", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2106, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a4674e4-9a91-4fb7-a79f-2f84227d47e2": {"__data__": {"id_": "7a4674e4-9a91-4fb7-a79f-2f84227d47e2", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/_index.md", "file_name": "_index.md", "file_size": 1254, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "86633b27-cb2b-4a77-8626-94a10383016f", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/_index.md", "file_name": "_index.md", "file_size": 1254, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "869fdb122bfd92504d4cf9adb5958b115175df93719bd96aaf218feb09986665", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: Fundamental concepts\nslug: /get-started/fundamentals\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d324b0fe-baa5-4da3-9416-5791ed80e7d4": {"__data__": {"id_": "d324b0fe-baa5-4da3-9416-5791ed80e7d4", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/_index.md", "file_name": "_index.md", "file_size": 1254, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d301115a-e9e2-41d4-8ef4-239298a8f01b", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/_index.md", "file_name": "_index.md", "file_size": 1254, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "2959ed4c805b689bd3ec03b58ed9633c7dcde1486d690f436bf522f370c1694c", "class_name": "RelatedNodeInfo"}}, "text": "Fundamental concepts\n\nAre you new to Streamlit and want the grand tour? If so, you're in the right place!\n\n\n    <InlineCallout\n        color=\"orange-70\"\n        icon=\"description\"\n        bold=\"Basic concepts.\"\n        href=\"/get-started/fundamentals/main-concepts\"\n    >Learn the fundamental concepts of Streamlit. How is a Streamlit app structured? How does it run? How does it magically get your data on a webpage?\n    <InlineCallout\n        color=\"orange-70\"\n        icon=\"description\"\n        bold=\"Advanced concepts.\"\n        href=\"/get-started/fundamentals/advanced-concepts\"\n    >After you understand the rerun logic of Streamlit, learn how to make efficient and dynamic apps with caching and Session State. Get introduced to handling database connections.\n    <InlineCallout\n        color=\"orange-70\"\n        icon=\"description\"\n        bold=\"Additional features.\"\n        href=\"/get-started/fundamentals/additional-features\"\n    >Learn about Streamlit's additional features. You don't need to know these concepts for your first app, but check it out to know what's available.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1086, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c261471f-5bba-42f7-92e6-0c77a7f55055": {"__data__": {"id_": "c261471f-5bba-42f7-92e6-0c77a7f55055", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7c93a80-bd2f-48d4-a442-f9476fb24da0", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "f8b430aa0759661ef74a0e0358ca44e15333a1bf4a221b8cbeab83f784f3d4ed", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: Additional Streamlit features\nslug: /get-started/fundamentals/additional-features\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 96, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71e04240-349d-4e04-9953-e3ece006d87c": {"__data__": {"id_": "71e04240-349d-4e04-9953-e3ece006d87c", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39a9ae62-b1c5-445c-bdce-56579eaed8ca", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "110e406053e918d2aa88029247e95524a535fba54154905ed037227b51920437", "class_name": "RelatedNodeInfo"}}, "text": "Additional Streamlit features\n\nSo you've read all about Streamlit's Basic concepts and gotten a taste of caching and Session State in Advanced concepts. But what about the bells and whistles? Here's a quick look at some extra features to take your app to the next level.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 272, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e90cd9c-c9d2-45a2-af42-74a269fe6b3a": {"__data__": {"id_": "4e90cd9c-c9d2-45a2-af42-74a269fe6b3a", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4ff04fed-4514-4dfc-b571-81071d92b099", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "ec9f70317435122d0decd58087d909cb7b6f8c97f38b353d22b0f6ba76916aa2", "class_name": "RelatedNodeInfo"}}, "text": "Theming\n\nStreamlit supports Light and Dark themes out of the box. Streamlit will first\ncheck if the user viewing an app has a Light or Dark mode preference set by\ntheir operating system and browser. If so, then that preference will be used.\nOtherwise, the Light theme is applied by default.\n\nYou can also change the active theme from \"\u22ee\" \u2192 \"Settings\".\n\n!Changing Themes\n\nWant to add your own theme to an app? The \"Settings\" menu has a theme editor\naccessible by clicking on \"Edit active theme\". You can use this editor to try\nout different colors and see your app update live.\n\n!Editing Themes\n\nWhen you're happy with your work, themes can be saved by\nsetting config options\nin the `[theme]` config section. After you've defined a theme for your app, it\nwill appear as \"Custom Theme\" in the theme selector and will be applied by\ndefault instead of the included Light and Dark themes.\n\nMore information about the options available when defining a theme can be found\nin the theme option documentation.\n\n\n\nThe theme editor menu is available only in local development. If you've deployed your app using\nStreamlit Community Cloud, the \"Edit active theme\" button will no longer be displayed in the \"Settings\"\nmenu.\n\n\n\n\n\nAnother way to experiment with different theme colors is to turn on the \"Run on save\" option, edit\nyour config.toml file, and watch as your app reruns with the new theme colors applied.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1401, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2393dd5b-45f9-48e1-b8b4-1f9069a4be17": {"__data__": {"id_": "2393dd5b-45f9-48e1-b8b4-1f9069a4be17", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "873e4a57-6a46-44c0-a12e-6236181c8785", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "47faa7a1fbaf86061338b2b4533084220e6c5f4176f6df490e89f550742984de", "class_name": "RelatedNodeInfo"}}, "text": "Pages\n\nAs apps grow large, it becomes useful to organize them into multiple pages. This makes the app easier to manage as a developer and easier to navigate as a user. Streamlit provides a frictionless way to create multipage apps.\n\nWe designed this feature so that building a multipage app is as easy as building a single-page app! Just add more pages to an existing app as follows:\n\n1. In the folder containing your main script, create a new `pages` folder. Let\u2019s say your main script is named `main_page.py`.\n2. Add new `.py` files in the `pages` folder to add more pages to your app.\n3. Run `streamlit run main_page.py` as usual.\n\nThat\u2019s it! The `main_page.py` script will now correspond to the main page of your app. And you\u2019ll see the other scripts from the `pages` folder in the sidebar page selector. The pages are listed according to filename (without file extensions and disregarding underscores). For example:\n\n\nmain_page.py\n\n```python\nimport streamlit as st\n\nst.markdown(\"# Main page \ud83c\udf88\")\nst.sidebar.markdown(\"# Main page \ud83c\udf88\")\n```\n\n\n\n\npages/page_2.py\n\n```python\nimport streamlit as st\n\nst.markdown(\"# Page 2 \u2744\ufe0f\")\nst.sidebar.markdown(\"# Page 2 \u2744\ufe0f\")\n```\n\n\n\n\npages/page_3.py\n\n```python\nimport streamlit as st\n\nst.markdown(\"# Page 3 \ud83c\udf89\")\nst.sidebar.markdown(\"# Page 3 \ud83c\udf89\")\n```\n\n\n\n\nNow run `streamlit run main_page.py` and view your shiny new multipage app!\n\n\n\nOur documentation on Multipage apps teaches you how to add pages to your app, including how to define pages, structure and run multipage apps, and navigate between pages. Once you understand the basics, create your first multipage app!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1601, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d3a5a4b1-3aff-4709-af93-0e6ed9984888": {"__data__": {"id_": "d3a5a4b1-3aff-4709-af93-0e6ed9984888", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2496d1c6-9b2b-49f7-a003-8821da552bbd", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "6d0c4bcad95fe8dfdb4e002eaf2742a967c4ba7465cfedd170191d84829175c1", "class_name": "RelatedNodeInfo"}}, "text": "Custom components\n\nIf you can't find the right component within the Streamlit library, try out custom components to extend Streamlit's built-in functionality. Explore and browse through popular, community-created components in the Components gallery. If you dabble in frontend development, you can build your own custom component with Streamlit's components API.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 364, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad727fcc-7086-4904-a6d1-d35e6f8d7b29": {"__data__": {"id_": "ad727fcc-7086-4904-a6d1-d35e6f8d7b29", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "36705235-1da1-4ae2-86c5-a85a73a99885", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "bc5ba52df293fe17732b4bbe99993d8e306d1f87477b4369639bed53c9a03b55", "class_name": "RelatedNodeInfo"}}, "text": "Static file serving\n\nAs you learned in Streamlit fundamentals, Streamlit runs a server that clients connect to. That means viewers of your app don't have direct access to the files which are local to your app. Most of the time, this doesn't matter because Streamlt commands handle that for you. When you use `st.image()` your Streamlit server will access the file and handle the necessary hosting so your app viewers can see it. However, if you want a direct URL to an image or file you'll need to host it. This requires setting the correct configuration and placing your hosted files in a directory named `static`. For example, your project could look like:\n\n```bash\nyour-project/\n\u251c\u2500\u2500 static/\n\u2502   \u2514\u2500\u2500 my_hosted-image.png\n\u2514\u2500\u2500 streamlit_app.py\n```\n\nTo learn more, read our guide on Static file serving.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 803, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c810b66-d50b-4a29-922a-f0c4f819e668": {"__data__": {"id_": "6c810b66-d50b-4a29-922a-f0c4f819e668", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "06fc06c8-f8ff-44e9-8fd1-44e8c080122f", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "98c58f7271de8c8f8ea4f22387bdddd5a0f62b0d511699b3870fab746d6326c3", "class_name": "RelatedNodeInfo"}}, "text": "App testing\n\nGood development hygeine includes testing your code. Automated testing allows you to write higher quality code, faster! Streamlit has a built-in testing framework that let's you build tests easily. Use your favorite testing framework to run your tests. We like `pytest`. When you test a Streamlit app, you simulate running the app, declare user input, and inspect the results. You can use GitHub workflows to automate your tests and get instant alerts about breaking changes. Learn more in our guide to App testing.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 530, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69664c8b-732e-43a5-9bbf-d9041e928a9d": {"__data__": {"id_": "69664c8b-732e-43a5-9bbf-d9041e928a9d", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eb1ea288-1922-4439-8a0e-0eacf9fa91ca", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "aa3b6f397a9bd30b69975558ac7a405e4f7a87713651aa2f7d2e252754596017", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: Advanced concepts of Streamlit\nslug: /get-started/fundamentals/advanced-concepts\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 95, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29dc13bd-1abc-454d-ade2-1a3244f6dbb4": {"__data__": {"id_": "29dc13bd-1abc-454d-ade2-1a3244f6dbb4", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f214e935-e88a-4f16-8b6c-322da8c7fd8d", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "d0a3dd8df47ab5680e0b5b821f0ebac38d8cf2df782b17a1197d87913644f35a", "class_name": "RelatedNodeInfo"}}, "text": "Advanced concepts of Streamlit\n\nNow that you know how a Streamlit app runs and handles data, let's talk about being efficient. Caching allows you to save the output of a function so you can skip over it on rerun. Session State lets you save information for each user that is preserved between reruns. This not only allows you to avoid unecessary recalculation, but also allows you to create dynamic pages and handle progressive processes.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 440, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f58ed654-3579-424f-b6ad-38269bdbc3c5": {"__data__": {"id_": "f58ed654-3579-424f-b6ad-38269bdbc3c5", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f4e4976-643d-4360-b0d4-7e9b0d53dad7", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "bf82ae1f64c72b1b17f6eb3e791b7d8d020131927a4f45aaf356972304fac367", "class_name": "RelatedNodeInfo"}}, "text": "Caching\n\nCaching allows your app to stay performant even when loading data from the web, manipulating large datasets, or performing expensive computations.\n\nThe basic idea behind caching is to store the results of expensive function calls and return the cached result when the same inputs occur again. This avoids repeated execution of a function with the same input values.\n\nTo cache a function in Streamlit, you need to apply a caching decorator to it. You have two choices:\n\n- `st.cache_data` is the recommended way to cache computations that return data. Use `st.cache_data` when you use a function that returns a serializable data object (e.g. str, int, float, DataFrame, dict, list). **It creates a new copy of the data at each function call**, making it safe against mutations and race conditions. The behavior of `st.cache_data` is what you want in most cases \u2013 so if you're unsure, start with\u00a0`st.cache_data`\u00a0and see if it works!\n- `st.cache_resource` is the recommended way to cache global resources like ML models or database connections. Use `st.cache_resource` when your function returns unserializable objects that you don\u2019t want to load multiple times. **It returns the cached object itself**, which is shared across all reruns and sessions without copying or duplication. If you mutate an object that is cached using `st.cache_resource`, that mutation will exist across all reruns and sessions.\n\nExample:\n\n```python\n@st.cache_data\ndef long_running_function(param1, param2):\n    return \u2026\n```\n\nIn the above example, `long_running_function` is decorated with `@st.cache_data`. As a result, Streamlit notes the following:\n\n- The name of the function (`\"long_running_function\"`).\n- The value of the inputs (`param1`, `param2`).\n- The code within the function.\n\nBefore running the code within `long_running_function`, Streamlit checks its cache for a previously saved result. If it finds a cached result for the given function and input values, it will return that cached result and not rerun function's code. Otherwise, Streamlit executes the function, saves the result in its cache, and proceeds with the script run. During development, the cache updates automatically as the function code changes, ensuring that the latest changes are reflected in the cache.\n\n\n\nFor more information about the Streamlit caching decorators, their configuration parameters, and their limitations, see Caching.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2405, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bdf8438c-06c1-4baf-acbd-5123cb0c6894": {"__data__": {"id_": "bdf8438c-06c1-4baf-acbd-5123cb0c6894", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c0550a62-ceca-48f8-8ecd-ba72c8bf34eb", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "d5d594498b254b98ac2b9a9378f0220096259af5b32358e64cfefc0ead2b5f7f", "class_name": "RelatedNodeInfo"}}, "text": "Session State\n\nSession State provides a dictionary-like interface where you can save information that is preserved between script reruns. Use `st.session_state` with key or attribute notation to store and recall values. For example, `st.session_state[\"my_key\"]` or `st.session_state.my_key`. Remember that widgets handle their statefulness all by themselves, so you won't always need to use Session State!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "778b178f-97db-4a1d-9b57-18ec0a18ddfe": {"__data__": {"id_": "778b178f-97db-4a1d-9b57-18ec0a18ddfe", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f43890a7-2424-4a9d-9caa-495f93aaf64d", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "1003a89f0dffcc976b2ce7bf4f6bbf6b53b34014477d5504c928969b5f6c30d7", "class_name": "RelatedNodeInfo"}}, "text": "What is a session?\n\nA session is a single instance of viewing an app. If you view an app from two different tabs in your browser, each tab will have its own session. So each viewer of an app will have a Session State tied to their specific view. Streamlit maintains this session as the user interacts with the app. If the user refreshes their browser page or reloads the URL to the app, their Session State resets and they begin again with a new session.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 456, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f614d8f0-e767-4a1a-a86b-9bdabdb442ae": {"__data__": {"id_": "f614d8f0-e767-4a1a-a86b-9bdabdb442ae", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "921b172c-43a8-4c89-9cd0-799767c01a1d", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "6058c09d217bb9b059d5a8eb733fa6cab9f25372adc1e1bc8d494f1775057718", "class_name": "RelatedNodeInfo"}}, "text": "Examples of using Session State\n\nHere's a simple app that counts the number of times the page has been run. Every time you click the button, the script will rerun.\n\n```python\nimport streamlit as st\n\nif \"counter\" not in st.session_state:\n    st.session_state.counter = 0\n\nst.session_state.counter += 1\n\nst.header(f\"This page has run {st.session_state.counter} times.\")\nst.button(\"Run it again\")\n```\n\n- **First run:** The first time the app runs for each user, Session State is empty. Therefore, a key-value pair is created (`\"counter\":0`). As the script continues, the counter is immediately incremented (`\"counter\":1`) and the result is displayed: \"This page has run 1 times.\" When the page has fully rendered, the script has finished and the Streamlit server waits for the user to do something. When that user clicks the button, a rerun begins.\n\n- **Second run:** Since \"counter\" is already a key in Session State, it is not reinitialized. As the script continues, the counter is incremented (`\"counter\":2`) and the result is displayed: \"This page has run 2 times.\"\n\nThere are a few common scenarios where Session State is helpful. As demonstrated above, Session State is used when you have a progressive process that you want to build upon from one rerun to the next. Session State can also be used to prevent recalculation, similar to caching. However, the differences are important:\n\n- Caching associates stored values to specific functions and inputs. Cached values are accessible to all users across all sessions.\n- Session State associates stored values to keys (strings). Values in session state are only available in the single session where it was saved.\n\nIf you have random number generation in your app, you'd likely use Session State. Here's an example where data is generated randomly at the beginning of each session. By saving this random information in Session State, each user gets different random data when they open the app but it won't keep changing on them as they interact with it. If you select different colors with the picker you'll see that the data does not get re-randomized with each rerun. (If you open the app in a new tab to start a new session, you'll see different data!)\n\n```python\nimport streamlit as st\nimport pandas as pd\nimport numpy as np\n\nif \"df\" not in st.session_state:\n    st.session_state.df = pd.DataFrame(np.random.randn(20, 2), columns=[\"x\", \"y\"])\n\nst.header(\"Choose a datapoint color\")\ncolor = st.color_picker(\"Color\", \"#FF0000\")\nst.divider()\nst.scatter_chart(st.session_state.df, x=\"x\", y=\"y\", color=color)\n```\n\nIf you are pulling the same data for all users, you'd likely cache a function that retrieves that data. On the other hand, if you pull data specific to a user, such as querying their personal information, you may want to save that in Session State. That way, the queried data is only available in that one session.\n\nAs mentioned in Basic concepts, Session State is also related to widgets. Widgets are magical and handle statefulness quietly on their own. As an advanced feature however, you can manipulate the value of widgets within your code by assigning keys to them. Any key assigned to a widget becomes a key in Session State tied to the value of the widget. This can be used to manipulate the widget. After you finish understanding the basics of Streamlit, check out our guide on Widget behavior to dig in the details if you're interested.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3412, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3406969-6622-4717-ac8d-edc7f61c3c20": {"__data__": {"id_": "b3406969-6622-4717-ac8d-edc7f61c3c20", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4da6a4ee-ba3f-4639-aadc-34cea1e31eaf", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "52d84442e0f38395447b0624da0d972cbc0aebc9ffaa5b1aebe7784b78f31d7d", "class_name": "RelatedNodeInfo"}}, "text": "Connections\n\nAs hinted above, you can use `@st.cache_resource` to cache connections. This is the most general solution which allows you to use almost any connection from any Python library. However, Streamlit also offers a convenient way to handle some of the most popular connections, like SQL! `st.connection` takes care of the caching for you so you can enjoy fewer lines of code. Getting data from your database can be as easy as:\n\n```python\nimport streamlit as st\n\nconn = st.connection(\"my_database\")\ndf = conn.query(\"select * from my_table\")\nst.dataframe(df)\n```\n\nOf course, you may be wondering where your username and password go. Streamlit has a convenient mechanism for Secrets management. For now, let's just see how `st.connection` works very nicely with secrets. In your local project directory, you can save a `.streamlit/secrets.toml` file. You save your secrets in the toml file and `st.connection` just uses them! For example, if you have an app file `streamlit_app.py` your project directory may look like this:\n\n```bash\nyour-LOCAL-repository/\n\u251c\u2500\u2500 .streamlit/\n\u2502   \u2514\u2500\u2500 secrets.toml # Make sure to gitignore this!\n\u2514\u2500\u2500 streamlit_app.py\n```\n\nFor the above SQL example, your `secrets.toml` file might look like the following:\n\n```toml\n[connections.my_database]\n    type=\"sql\"\n    dialect=\"mysql\"\n    username=\"xxx\"\n    password=\"xxx\"\n    host=\"example.com\" # IP or URL\n    port=3306 # Port number\n    database=\"mydb\" # Database name\n```\n\nSince you don't want to commit your `secrets.toml` file to your repository, you'll need to learn how your host handles secrets when you're ready to publish your app. Each host platform may have a different way for you to pass your secrets. If you use Streamlit Community Cloud for example, each deployed app has a settings menu where you can load your secrets. After you've written an app and are ready to deploy, you can read all about how to Deploy your app on Community Cloud.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1932, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d507f3b1-b2ca-4cd4-bd98-5733f209c3d2": {"__data__": {"id_": "d507f3b1-b2ca-4cd4-bd98-5733f209c3d2", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1f5617ef-1d47-49f0-b2dc-15bb3bb3d189", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "dd2d42c40c09583120fd553b9e168eb5d350b224515abc50b807317fccfd229b", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: Basic concepts of Streamlit\nslug: /get-started/fundamentals/main-concepts\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 88, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63660b82-97db-49bc-9bb7-0b1372c3b6ad": {"__data__": {"id_": "63660b82-97db-49bc-9bb7-0b1372c3b6ad", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f4fec4b6-8d18-41c6-91d5-06eb51b0c54a", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "141302ccb9019739ddc7109e8f6dedc78dc628661e4693648af5e8a190f20171", "class_name": "RelatedNodeInfo"}}, "text": "Basic concepts of Streamlit\n\nWorking with Streamlit is simple. First you sprinkle a few Streamlit commands\ninto a normal Python script, then you run it with `streamlit run`:\n\n```bash\nstreamlit run your_script.py [-- script args]\n```\n\nAs soon as you run the script as shown above, a local Streamlit server will\nspin up and your app will open in a new tab in your default web browser. The app\nis your canvas, where you'll draw charts, text, widgets, tables, and more.\n\nWhat gets drawn in the app is up to you. For example\n`st.text` writes raw text to your app, and\n`st.line_chart` draws \u2014 you guessed it \u2014 a\nline chart. Refer to our API documentation to see all commands that\nare available to you.\n\n\n\nWhen passing your script some custom arguments, they must be passed after two dashes. Otherwise the\narguments get interpreted as arguments to Streamlit itself.\n\n\n\nAnother way of running Streamlit is to run it as a Python module. This can be\nuseful when configuring an IDE like PyCharm to work with Streamlit:\n\n```bash\n# Running\npython -m streamlit run your_script.py\n\n# is equivalent to:\nstreamlit run your_script.py\n```\n\n\n\nYou can also pass a URL to `streamlit run`! This is great when combined with\nGitHub Gists. For example:\n\n```bash\nstreamlit run https://raw.githubusercontent.com/streamlit/demo-uber-nyc-pickups/master/streamlit_app.py\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1345, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ff510b9-f0a8-4bdc-91dc-584ee7b3180a": {"__data__": {"id_": "7ff510b9-f0a8-4bdc-91dc-584ee7b3180a", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c33adac-a6a5-4429-9ee6-60eb9a0c3ff7", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "b9fa1ab6152359198f3a90caf0d388b6ef0362ae59592cad436d7c02dbc42de1", "class_name": "RelatedNodeInfo"}}, "text": "Development flow\n\nEvery time you want to update your app, save the source file. When you do\nthat, Streamlit detects if there is a change and asks you whether you want to\nrerun your app. Choose \"Always rerun\" at the top-right of your screen to\nautomatically update your app every time you change its source code.\n\nThis allows you to work in a fast interactive loop: you type some code, save\nit, try it out live, then type some more code, save it, try it out, and so on\nuntil you're happy with the results. This tight loop between coding and viewing\nresults live is one of the ways Streamlit makes your life easier.\n\n\n\nWhile developing a Streamlit app, it's recommended to lay out your editor and\nbrowser windows side by side, so the code and the app can be seen at the same\ntime. Give it a try!\n\n\n\nAs of Streamlit version 1.10.0 and higher, Streamlit apps cannot be run from the root directory of Linux distributions. If you try to run a Streamlit app from the root directory, Streamlit will throw a `FileNotFoundError: Errno 2] No such file or directory` error. For more information, see GitHub issue [#5239.\n\nIf you are using Streamlit version 1.10.0 or higher, your main script should live in a directory other than the root directory. When using Docker, you can use the `WORKDIR` command to specify the directory where your main script lives. For an example of how to do this, read Create a Dockerfile.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "329860a1-11ce-4971-9533-9340c5a3d2f8": {"__data__": {"id_": "329860a1-11ce-4971-9533-9340c5a3d2f8", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "169b7fce-6f93-4b73-874c-2a417331140f", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "7bc429cc8d69760cdec0bbdde0727c4e0acafd489d032527804fd46f04e44a4c", "class_name": "RelatedNodeInfo"}}, "text": "Data flow\n\nStreamlit's architecture allows you to write apps the same way you write plain\nPython scripts. To unlock this, Streamlit apps have a unique data flow: any\ntime something must be updated on the screen, Streamlit reruns your entire\nPython script from top to bottom.\n\nThis can happen in two situations:\n\n- Whenever you modify your app's source code.\n\n- Whenever a user interacts with widgets in the app. For example, when dragging\n  a slider, entering text in an input box, or clicking a button.\n\nWhenever a callback is passed to a widget via the `on_change` (or `on_click`) parameter, the callback will always run before the rest of your script. For details on the Callbacks API, please refer to our Session State API Reference Guide.\n\nAnd to make all of this fast and seamless, Streamlit does some heavy lifting\nfor you behind the scenes. A big player in this story is the\n`@st.cache_data` decorator, which allows developers to skip certain\ncostly computations when their apps rerun. We'll cover caching later in this\npage.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1035, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "320bd439-bb44-465f-bfc2-7430da6691b6": {"__data__": {"id_": "320bd439-bb44-465f-bfc2-7430da6691b6", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2eb784f3-9897-4d1b-9f83-22671fdeff03", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "9638046ee947db575aaae09c094b7181cbf800b867bf63815e7409ff67ae2400", "class_name": "RelatedNodeInfo"}}, "text": "Display and style data\n\nThere are a few ways to display data (tables, arrays, data frames) in Streamlit\napps. Below, you will be introduced to _magic_\nand `st.write()`, which can be used to write\nanything from text to tables. After that, let's take a look at methods designed\nspecifically for visualizing data.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 312, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06d45632-74f2-4373-9905-6ac6428dd2c7": {"__data__": {"id_": "06d45632-74f2-4373-9905-6ac6428dd2c7", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ae83719-4bba-4afd-a83e-060cf4fdfdcb", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "f25c86b24661c64fb97f76fd100c7d2cb9216e12f4020fc128d8f92f184c8be3", "class_name": "RelatedNodeInfo"}}, "text": "Use magic\n\nYou can also write to your app without calling any Streamlit methods.\nStreamlit supports \"magic commands,\" which means you don't have to use\n`st.write()` at all! To see this in action try this snippet:\n\n```python\n\"\"\"\n# My first app\nHere's our first attempt at using data to create a table:\n\"\"\"\n\nimport streamlit as st\nimport pandas as pd\ndf = pd.DataFrame({\n  'first column': [1, 2, 3, 4],\n  'second column': [10, 20, 30, 40]\n})\n\ndf\n```\n\nAny time that Streamlit sees a variable or a literal\nvalue on its own line, it automatically writes that to your app using\n`st.write()`. For more information, refer to the\ndocumentation on magic commands.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 655, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53c70e53-4949-4a9e-adb8-b32fb8d80ae1": {"__data__": {"id_": "53c70e53-4949-4a9e-adb8-b32fb8d80ae1", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3d65fc87-bdd9-4402-aa3f-476c741a027d", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "3da8f64fdbfaa5ab503c3e8e246677650b054b3d9d27d1a60c97bc8226b26587", "class_name": "RelatedNodeInfo"}}, "text": "Write a data frame\n\nAlong with magic commands,\n`st.write()` is Streamlit's \"Swiss Army knife\". You\ncan pass almost anything to `st.write()`:\ntext, data, Matplotlib figures, Altair charts, and more. Don't worry, Streamlit\nwill figure it out and render things the right way.\n\n```python\nimport streamlit as st\nimport pandas as pd\n\nst.write(\"Here's our first attempt at using data to create a table:\")\nst.write(pd.DataFrame({\n    'first column': [1, 2, 3, 4],\n    'second column': [10, 20, 30, 40]\n}))\n```\n\nThere are other data specific functions like\n`st.dataframe()` and\n`st.table()` that you can also use for displaying\ndata. Let's understand when to use these features and how to add colors and styling to your data frames.\n\nYou might be asking yourself, \"why wouldn't I always use `st.write()`?\" There are\na few reasons:\n\n1. _Magic_ and `st.write()` inspect the type of\n   data that you've passed in, and then decide how to best render it in the\n   app. Sometimes you want to draw it another way. For example, instead of\n   drawing a dataframe as an interactive table, you may want to draw it as a\n   static table by using `st.table(df)`.\n2. The second reason is that other methods return an object that can be used\n   and modified, either by adding data to it or replacing it.\n3. Finally, if you use a more specific Streamlit method you can pass additional\n   arguments to customize its behavior.\n\nFor example, let's create a data frame and change its formatting with a Pandas\n`Styler` object. In this example, you'll use Numpy to generate a random sample,\nand the `st.dataframe()` method to draw an\ninteractive table.\n\n\n\nThis example uses Numpy to generate a random sample, but you can use Pandas\nDataFrames, Numpy arrays, or plain Python arrays.\n\n\n\n```python\nimport streamlit as st\nimport numpy as np\n\ndataframe = np.random.randn(10, 20)\nst.dataframe(dataframe)\n```\n\nLet's expand on the first example using the Pandas `Styler` object to highlight\nsome elements in the interactive table.\n\n```python\nimport streamlit as st\nimport numpy as np\nimport pandas as pd\n\ndataframe = pd.DataFrame(\n    np.random.randn(10, 20),\n    columns=('col %d' % i for i in range(20)))\n\nst.dataframe(dataframe.style.highlight_max(axis=0))\n```\n\nStreamlit also has a method for static table generation:\n`st.table()`.\n\n```python\nimport streamlit as st\nimport numpy as np\nimport pandas as pd\n\ndataframe = pd.DataFrame(\n    np.random.randn(10, 20),\n    columns=('col %d' % i for i in range(20)))\nst.table(dataframe)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2497, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d3c7298-a80e-4d0a-b6f6-5d10751cede3": {"__data__": {"id_": "2d3c7298-a80e-4d0a-b6f6-5d10751cede3", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f15f79bc-3338-4230-b32e-8066e96f4658", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "a6f3c4aec97a840451b00c165dfcc4538a6cecba0f448fd4cbfcc4ed78845c4a", "class_name": "RelatedNodeInfo"}}, "text": "Draw charts and maps\n\nStreamlit supports several popular data charting libraries like [Matplotlib,\nAltair, deck.gl, and more](/develop/api-reference#chart-elements). In this section, you'll\nadd a bar chart, line chart, and a map to your app.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 243, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5897cd5e-9483-41cf-b4d6-a33d6c6ff1c2": {"__data__": {"id_": "5897cd5e-9483-41cf-b4d6-a33d6c6ff1c2", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d380d343-3218-4fe3-85fc-c9e63a014255", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "f39605f0be4244229ad4c4e20aa7a8068e65701dc38847757552c97ec45d8e78", "class_name": "RelatedNodeInfo"}}, "text": "Draw a line chart\n\nYou can easily add a line chart to your app with\n`st.line_chart()`. We'll generate a random\nsample using Numpy and then chart it.\n\n```python\nimport streamlit as st\nimport numpy as np\nimport pandas as pd\n\nchart_data = pd.DataFrame(\n     np.random.randn(20, 3),\n     columns=['a', 'b', 'c'])\n\nst.line_chart(chart_data)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 341, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea748d3d-3030-499a-bf19-ee089970e992": {"__data__": {"id_": "ea748d3d-3030-499a-bf19-ee089970e992", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2443acaf-f105-41bd-bc06-31804e919e80", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "fce9ff9fc3211093f57587577dfae7e1546ed535cf252be9377d092e9eb3cfe1", "class_name": "RelatedNodeInfo"}}, "text": "Plot a map\n\nWith `st.map()` you can display data points on a map.\nLet's use Numpy to generate some sample data and plot it on a map of\nSan Francisco.\n\n```python\nimport streamlit as st\nimport numpy as np\nimport pandas as pd\n\nmap_data = pd.DataFrame(\n    np.random.randn(1000, 2) / [50, 50] + [37.76, -122.4],\n    columns=['lat', 'lon'])\n\nst.map(map_data)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 359, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f0a2a42-e066-4136-bb43-a353568638f3": {"__data__": {"id_": "7f0a2a42-e066-4136-bb43-a353568638f3", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c7387f3-70d3-48e8-b992-6de1d200eb59", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "9b60fece1eab1a7ca284933030b1676eda792f551df1265b0012184f1716e7fe", "class_name": "RelatedNodeInfo"}}, "text": "Widgets\n\nWhen you've got the data or model into the state that you want to explore, you\ncan add in widgets like `st.slider()`,\n`st.button()` or\n`st.selectbox()`. It's really straightforward\n\u2014 treat widgets as variables:\n\n```python\nimport streamlit as st\nx = st.slider('x')  # \ud83d\udc48 this is a widget\nst.write(x, 'squared is', x * x)\n```\n\nOn first run, the app above should output the text \"0 squared is 0\". Then\nevery time a user interacts with a widget, Streamlit simply reruns your script\nfrom top to bottom, assigning the current state of the widget to your variable\nin the process.\n\nFor example, if the user moves the slider to position `10`, Streamlit will\nrerun the code above and set `x` to `10` accordingly. So now you should see the\ntext \"10 squared is 100\".\n\nWidgets can also be accessed by key, if you choose to specify a string to use as the unique key for the widget:\n\n```python\nimport streamlit as st\nst.text_input(\"Your name\", key=\"name\")\n\n# You can access the value at any point with:\nst.session_state.name\n```\n\nEvery widget with a key is automatically added to Session State. For more information about Session State, its association with widget state, and its limitations, see Session State API Reference Guide.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "108c7b0a-43d1-4701-b27a-54b0319f83c1": {"__data__": {"id_": "108c7b0a-43d1-4701-b27a-54b0319f83c1", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "943a05e2-94d2-42aa-b373-edb0dd77318c", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "8acfa2402163611bc84e435f2c4f4f513d3d2b38577ed872f2342cb9ede15816", "class_name": "RelatedNodeInfo"}}, "text": "Use checkboxes to show/hide data\n\nOne use case for checkboxes is to hide or show a specific chart or section in\nan app. `st.checkbox()` takes a single argument,\nwhich is the widget label. In this sample, the checkbox is used to toggle a\nconditional statement.\n\n```python\nimport streamlit as st\nimport numpy as np\nimport pandas as pd\n\nif st.checkbox('Show dataframe'):\n    chart_data = pd.DataFrame(\n       np.random.randn(20, 3),\n       columns=['a', 'b', 'c'])\n\n    chart_data\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 483, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "35be786e-65a4-4028-9aa8-ae6e552a8296": {"__data__": {"id_": "35be786e-65a4-4028-9aa8-ae6e552a8296", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "083a01f1-da0d-45c9-a49d-7cc0c400665b", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "65df7ef2bba8999edc657f1d7cd0ba3b05b60b3bfb3051d7fbe1873f4abdb511", "class_name": "RelatedNodeInfo"}}, "text": "Use a selectbox for options\n\nUse `st.selectbox` to choose from a series. You\ncan write in the options you want, or pass through an array or data frame\ncolumn.\n\nLet's use the `df` data frame we created earlier.\n\n```python\nimport streamlit as st\nimport pandas as pd\n\ndf = pd.DataFrame({\n    'first column': [1, 2, 3, 4],\n    'second column': [10, 20, 30, 40]\n    })\n\noption = st.selectbox(\n    'Which number do you like best?',\n     df['first column'])\n\n'You selected: ', option\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 482, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0fea4ee5-9d0d-466a-b54d-671b6c470fd4": {"__data__": {"id_": "0fea4ee5-9d0d-466a-b54d-671b6c470fd4", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7584767d-7224-4736-af4f-6f2219ba8d0c", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "1a553434c2b374b1f6a760ba254c6978a347ba394f981b96389cc60289d6472e", "class_name": "RelatedNodeInfo"}}, "text": "Layout\n\nStreamlit makes it easy to organize your widgets in a left panel sidebar with\n`st.sidebar`. Each element that's passed to\n`st.sidebar` is pinned to the left, allowing\nusers to focus on the content in your app while still having access to UI\ncontrols.\n\nFor example, if you want to add a selectbox and a slider to a sidebar,\nuse `st.sidebar.slider` and `st.sidebar.selectbox` instead of `st.slider` and\n`st.selectbox`:\n\n```python\nimport streamlit as st\n\n# Add a selectbox to the sidebar:\nadd_selectbox = st.sidebar.selectbox(\n    'How would you like to be contacted?',\n    ('Email', 'Home phone', 'Mobile phone')\n)\n\n# Add a slider to the sidebar:\nadd_slider = st.sidebar.slider(\n    'Select a range of values',\n    0.0, 100.0, (25.0, 75.0)\n)\n```\n\nBeyond the sidebar, Streamlit offers several other ways to control the layout\nof your app. `st.columns` lets you place widgets side-by-side, and\n`st.expander` lets you conserve space by hiding away large content.\n\n```python\nimport streamlit as st\n\nleft_column, right_column = st.columns(2)\n# You can use a column just like st.sidebar:\nleft_column.button('Press me!')\n\n# Or even better, call Streamlit functions inside a \"with\" block:\nwith right_column:\n    chosen = st.radio(\n        'Sorting hat',\n        (\"Gryffindor\", \"Ravenclaw\", \"Hufflepuff\", \"Slytherin\"))\n    st.write(f\"You are in {chosen} house!\")\n```\n\n\n\n`st.echo` and `st.spinner` are not currently supported inside the sidebar\nor layout options. Rest assured, though, we're currently working on adding support for those too!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1540, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "355fb1ab-685a-41a7-9665-8767d67cabcc": {"__data__": {"id_": "355fb1ab-685a-41a7-9665-8767d67cabcc", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d7dbcf2c-5b2c-4933-9825-918f43472925", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "6cb8ef4ea4c0d5e49dcf7ae494f92288d654c1b797fc4dbd856929d79dd8b9a8", "class_name": "RelatedNodeInfo"}}, "text": "Show progress\n\nWhen adding long running computations to an app, you can use\n`st.progress()` to display status in real time.\n\nFirst, let's import time. We're going to use the `time.sleep()` method to\nsimulate a long running computation:\n\n```python\nimport time\n```\n\nNow, let's create a progress bar:\n\n```python\nimport streamlit as st\nimport time\n\n'Starting a long computation...'\n\n# Add a placeholder\nlatest_iteration = st.empty()\nbar = st.progress(0)\n\nfor i in range(100):\n  # Update the progress bar with each iteration.\n  latest_iteration.text(f'Iteration {i+1}')\n  bar.progress(i + 1)\n  time.sleep(0.1)\n\n'...and now we\\'re done!'\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 637, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "08e2e369-2067-45e5-8827-20ec850e1195": {"__data__": {"id_": "08e2e369-2067-45e5-8827-20ec850e1195", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/summary.md", "file_name": "summary.md", "file_size": 1046, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "33337535-4cad-4258-8af8-1ee7c9674583", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/summary.md", "file_name": "summary.md", "file_size": 1046, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "af814a58a81bd2dee81a666737843cd291cf6f122f090f3ebf0b8fc0e70bd26f", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: App model summary\nslug: /get-started/fundamentals/summary\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 72, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e93ca347-6cb0-4efa-b36d-1c42f5967f43": {"__data__": {"id_": "e93ca347-6cb0-4efa-b36d-1c42f5967f43", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/summary.md", "file_name": "summary.md", "file_size": 1046, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f4b8c2b6-834a-41e4-bb51-b985066fb04b", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/summary.md", "file_name": "summary.md", "file_size": 1046, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "cc8216a0932641b4ff6460f17d4ba52ec9bfe17ef797754c2a7220384e0ea012", "class_name": "RelatedNodeInfo"}}, "text": "App model summary\n\nNow that you know a little more about all the individual pieces, let's close\nthe loop and review how it works together:\n\n1. Streamlit apps are Python scripts that run from top to bottom.\n1. Every time a user opens a browser tab pointing to your app, the script is executed and a new session starts.\n1. As the script executes, Streamlit draws its output live in a browser.\n1. Every time a user interacts with a widget, your script is re-executed and Streamlit redraws its output in the browser.\n   - The output value of that widget matches the new value during that rerun.\n1. Scripts use the Streamlit cache to avoid recomputing expensive functions, so updates happen very fast.\n1. Session State lets you save information that persists between reruns when you need more than a simple widget.\n1. Streamlit apps can contain multiple pages, which are defined in separate `.py` files in a `pages` folder.\n\n!The Streamlit app model", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 946, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70ecd1a6-b71d-44fa-a62b-2d9951127053": {"__data__": {"id_": "70ecd1a6-b71d-44fa-a62b-2d9951127053", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/_index.md", "file_name": "_index.md", "file_size": 958, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c423c452-ade8-400e-b950-28c87af9cadc", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/_index.md", "file_name": "_index.md", "file_size": 958, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "ddcd8a908e9d78249608ca538b7fae40f6a1d67757f3137e308b7f3ecaf34b82", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: First steps building Streamlit apps\nslug: /get-started/tutorials\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 79, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6da2920-f573-40a3-bce4-295393918c88": {"__data__": {"id_": "e6da2920-f573-40a3-bce4-295393918c88", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/_index.md", "file_name": "_index.md", "file_size": 958, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2d16ad18-85f1-43a6-8723-49618376bdb5", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/_index.md", "file_name": "_index.md", "file_size": 958, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "fa4a713644d27c4c5650a50b9ba4edf146a141c47c38037e08def0c4c6be5e44", "class_name": "RelatedNodeInfo"}}, "text": "First steps building Streamlit apps\n\nIf you've just read through our Basic concepts and want to get your hands on Streamlit. Check out these tutorials. Make sure you have installed Streamlit so you can execute the code yourself.\n\n\n    <InlineCallout\n        color=\"orange-70\"\n        icon=\"description\"\n        bold=\"Create an app\"\n        href=\"/get-started/tutorials/create-an-app\"\n    >uses the concepts learned in Fundamentals along with caching to walk through making your first app.\n    <InlineCallout\n        color=\"orange-70\"\n        icon=\"auto_stories\"\n        bold=\"Create a multipage app\"\n        href=\"/get-started/tutorials/create-a-multipage-app\"\n    >walks through the easy steps to add pages to your app.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 722, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "524fc683-5345-490c-a469-6b25c5e0581e": {"__data__": {"id_": "524fc683-5345-490c-a469-6b25c5e0581e", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a00f8f0f-6b81-4ecc-893e-5eb375889dee", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "e9313bc478927199a9cb8a850baa1907be6fa641702d18826fac5059b2c0a4cd", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: Create a multipage app\nslug: /get-started/tutorials/create-a-multipage-app\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 89, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8aa3bf7c-1622-40cd-9c62-96d8fb2972ca": {"__data__": {"id_": "8aa3bf7c-1622-40cd-9c62-96d8fb2972ca", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f3a9f380-6758-4130-babc-2d86245b01e2", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "b679ea3c1bfbbde155b65484f29c143c5b3be5cba5bc003e58fc455b1a5537eb", "class_name": "RelatedNodeInfo"}}, "text": "Create a multipage app\n\nIn Additional features, we introduced multipage apps, including how to define pages, structure and run multipage apps, and navigate between pages in the user interface. You can read more details in our guide to Multipage apps\n\nIn this guide, let\u2019s put our understanding of multipage apps to use by converting the previous version of our `streamlit hello` app to a multipage app!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 404, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "472305fd-42d2-4bca-8ad4-3af8d032f9b1": {"__data__": {"id_": "472305fd-42d2-4bca-8ad4-3af8d032f9b1", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "13f275ef-b53e-4659-9c86-4842eb265bef", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "439c6f6033333728ac4aea724cc0c2526f66130f14f20cdfc1528d234022940b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1fa302cc-34ae-4b37-a51e-949159c94117", "node_type": "1", "metadata": {}, "hash": "3c777a614b54cc4af501c2b7a8a1a5f6474141becb67c2f66aa9ade38d597ac2", "class_name": "RelatedNodeInfo"}}, "text": "Motivation\n\nBefore Streamlit 1.10.0, the streamlit hello command was a large single-page app. As there was no support for multiple pages, we resorted to splitting the app's content using `st.selectbox` in the sidebar to choose what content to run. The content is comprised of three demos for plotting, mapping, and dataframes.\n\nHere's what the code and single-page app looked like:\n\n\nhello.py  (\ud83d\udc48 Toggle to expand)\n\n\n```python\nimport streamlit as st\n\ndef intro():\n    import streamlit as st\n\n    st.write(\"# Welcome to Streamlit! \ud83d\udc4b\")\n    st.sidebar.success(\"Select a demo above.\")\n\n    st.markdown(\n        \"\"\"\n        Streamlit is an open-source app framework built specifically for\n        Machine Learning and Data Science projects.\n\n        **\ud83d\udc48 Select a demo from the dropdown on the left** to see some examples\n        of what Streamlit can do!\n\n        ### Want to learn more?\n\n        - Check out streamlit.io\n        - Jump into our documentation\n        - Ask a question in our [community\n          forums](https://discuss.streamlit.io)\n\n        ### See more complex demos\n\n        - Use a neural net to [analyze the Udacity Self-driving Car Image\n          Dataset](https://github.com/streamlit/demo-self-driving)\n        - Explore a New York City rideshare dataset\n    \"\"\"\n    )\n\ndef mapping_demo():\n    import streamlit as st\n    import pandas as pd\n    import pydeck as pdk\n\n    from urllib.error import URLError\n\n    st.markdown(f\"# {list(page_names_to_funcs.keys())[2]}\")\n    st.write(\n        \"\"\"\n        This demo shows how to use\n`st.pydeck_chart`\nto display geospatial data.\n\"\"\"\n    )\n\n    @st.cache_data\n    def from_data_file(filename):\n        url = (\n            \"http://raw.githubusercontent.com/streamlit/\"\n            \"example-data/master/hello/v1/%s\" % filename\n        )\n        return pd.read_json(url)\n\n    try:\n        ALL_LAYERS = {\n            \"Bike Rentals\": pdk.Layer(\n                \"HexagonLayer\",\n                data=from_data_file(\"bike_rental_stats.json\"),\n                get_position=[\"lon\", \"lat\"],\n                radius=200,\n                elevation_scale=4,\n                elevation_range=[0, 1000],\n                extruded=True,\n            ),\n            \"Bart Stop Exits\": pdk.Layer(\n                \"ScatterplotLayer\",\n                data=from_data_file(\"bart_stop_stats.json\"),\n                get_position=[\"lon\", \"lat\"],\n                get_color=[200, 30, 0, 160],\n                get_radius=\"[exits]\",\n                radius_scale=0.05,\n            ),\n            \"Bart Stop Names\": pdk.Layer(\n                \"TextLayer\",\n                data=from_data_file(\"bart_stop_stats.json\"),\n                get_position=[\"lon\", \"lat\"],\n                get_text=\"name\",\n                get_color=[0, 0, 0, 200],\n                get_size=15,\n                get_alignment_baseline=\"'bottom'\",\n            ),\n            \"Outbound Flow\": pdk.Layer(\n                \"ArcLayer\",\n                data=from_data_file(\"bart_path_stats.json\"),\n                get_source_position=[\"lon\", \"lat\"],\n                get_target_position=[\"lon2\", \"lat2\"],\n                get_source_color=[200, 30, 0, 160],\n                get_target_color=[200, 30, 0, 160],\n                auto_highlight=True,\n                width_scale=0.0001,\n                get_width=\"outbound\",\n                width_min_pixels=3,\n                width_max_pixels=30,\n            ),\n        }\n        st.sidebar.markdown(\"### Map Layers\")\n        selected_layers = [\n            layer\n            for layer_name, layer in ALL_LAYERS.items()\n            if st.sidebar.checkbox(layer_name, True)\n        ]\n        if selected_layers:\n            st.pydeck_chart(\n                pdk.Deck(\n                    map_style=\"mapbox://styles/mapbox/light-v9\",\n                    initial_view_state={\n                        \"latitude\": 37.76,\n                        \"longitude\": -122.4,\n                        \"zoom\": 11,\n                        \"pitch\": 50,\n                    },\n                    layers=selected_layers,\n                )\n            )\n        else:\n            st.error(\"Please choose at least one layer above.\")\n    except URLError as e:\n        st.error(\n            \"\"\"\n            **This demo requires internet access.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 4257, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fa302cc-34ae-4b37-a51e-949159c94117": {"__data__": {"id_": "1fa302cc-34ae-4b37-a51e-949159c94117", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "13f275ef-b53e-4659-9c86-4842eb265bef", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "439c6f6033333728ac4aea724cc0c2526f66130f14f20cdfc1528d234022940b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "472305fd-42d2-4bca-8ad4-3af8d032f9b1", "node_type": "1", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "78acbfb870733b66bcc28a4d505f32e6953260356eca6aa20bde6b1cb1b7d4e9", "class_name": "RelatedNodeInfo"}}, "text": "except URLError as e:\n        st.error(\n            \"\"\"\n            **This demo requires internet access.**\n\n            Connection error: %s\n        \"\"\"\n            % e.reason\n        )\n\ndef plotting_demo():\n    import streamlit as st\n    import time\n    import numpy as np\n\n    st.markdown(f'# {list(page_names_to_funcs.keys())[1]}')\n    st.write(\n        \"\"\"\n        This demo illustrates a combination of plotting and animation with\nStreamlit. We're generating a bunch of random numbers in a loop for around\n5 seconds. Enjoy!\n\"\"\"\n    )\n\n    progress_bar = st.sidebar.progress(0)\n    status_text = st.sidebar.empty()\n    last_rows = np.random.randn(1, 1)\n    chart = st.line_chart(last_rows)\n\n    for i in range(1, 101):\n        new_rows = last_rows[-1, :] + np.random.randn(5, 1).cumsum(axis=0)\n        status_text.text(\"%i%% Complete\" % i)\n        chart.add_rows(new_rows)\n        progress_bar.progress(i)\n        last_rows = new_rows\n        time.sleep(0.05)\n\n    progress_bar.empty()\n\n    # Streamlit widgets automatically run the script from top to bottom. Since\n    # this button is not connected to any other logic, it just causes a plain\n    # rerun.\n    st.button(\"Re-run\")\n\n\ndef data_frame_demo():\n    import streamlit as st\n    import pandas as pd\n    import altair as alt\n\n    from urllib.error import URLError\n\n    st.markdown(f\"# {list(page_names_to_funcs.keys())[3]}\")\n    st.write(\n        \"\"\"\n        This demo shows how to use `st.write` to visualize Pandas DataFrames.\n\n(Data courtesy of the UN Data Explorer.)\n\"\"\"\n    )\n\n    @st.cache_data\n    def get_UN_data():\n        AWS_BUCKET_URL = \"http://streamlit-demo-data.s3-us-west-2.amazonaws.com\"\n        df = pd.read_csv(AWS_BUCKET_URL + \"/agri.csv.gz\")\n        return df.set_index(\"Region\")\n\n    try:\n        df = get_UN_data()\n        countries = st.multiselect(\n            \"Choose countries\", list(df.index), [\"China\", \"United States of America\"]\n        )\n        if not countries:\n            st.error(\"Please select at least one country.\")\n        else:\n            data = df.loc[countries]\n            data /= 1000000.0\n            st.write(\"### Gross Agricultural Production ($B)\", data.sort_index())\n\n            data = data.T.reset_index()\n            data = pd.melt(data, id_vars=[\"index\"]).rename(\n                columns={\"index\": \"year\", \"value\": \"Gross Agricultural Product ($B)\"}\n            )\n            chart = (\n                alt.Chart(data)\n                .mark_area(opacity=0.3)\n                .encode(\n                    x=\"year:T\",\n                    y=alt.Y(\"Gross Agricultural Product ($B):Q\", stack=None),\n                    color=\"Region:N\",\n                )\n            )\n            st.altair_chart(chart, use_container_width=True)\n    except URLError as e:\n        st.error(\n            \"\"\"\n            **This demo requires internet access.**\n\n            Connection error: %s\n        \"\"\"\n            % e.reason\n        )\n\npage_names_to_funcs = {\n    \"\u2014\": intro,\n    \"Plotting Demo\": plotting_demo,\n    \"Mapping Demo\": mapping_demo,\n    \"DataFrame Demo\": data_frame_demo\n}\n\ndemo_name = st.sidebar.selectbox(\"Choose a demo\", page_names_to_funcs.keys())\npage_names_to_funcsdemo_name\n```\n\n\n\n\n\nNotice how large the file is! Each app \u201cpage\" is written as a function, and the selectbox is used to pick which page to display. As our app grows, maintaining the code requires a lot of additional overhead. Moreover, we\u2019re limited by the `st.selectbox` UI to choose which \u201cpage\" to run, we cannot customize individual page titles with `st.set_page_config`, and we\u2019re unable to navigate between pages using URLs.", "mimetype": "text/plain", "start_char_idx": 4152, "end_char_idx": 7764, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d70fa4dc-fc46-43f2-9104-b091021a2cc0": {"__data__": {"id_": "d70fa4dc-fc46-43f2-9104-b091021a2cc0", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3f3030f8-6561-4be9-82b9-763884267c9b", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "28cd54043e1e7e119385f39894876bf70a08ead9b0386c0eb304509d9d4e7ee1", "class_name": "RelatedNodeInfo"}}, "text": "Convert an existing app into a multipage app\n\nNow that we've identified the limitations of a single-page app, what can we do about it? Armed with our knowledge from the previous section, we can convert the existing app to be a multipage app, of course! At a high level, we need to perform the following steps:\n\n1. Create a new `pages` folder in the same folder where the \u201centrypoint file\" (`hello.py`) lives\n2. Rename our entrypoint file to `Hello.py` , so that the title in the sidebar is capitalized\n3. Create three new files inside of `pages`:\n   - `pages/1_\ud83d\udcc8_Plotting_Demo.py`\n   - `pages/2_\ud83c\udf0d_Mapping_Demo.py`\n   - `pages/3_\ud83d\udcca_DataFrame_Demo.py`\n4. Move the contents of the `plotting_demo`, `mapping_demo`, and `data_frame_demo` functions into their corresponding new files from Step 3\n5. Run `streamlit run Hello.py` to view your newly converted multipage app!\n\nNow, let\u2019s walk through each step of the process and view the corresponding changes in code.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 960, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e78c570-d9d9-4815-b58d-e025dcdaac2a": {"__data__": {"id_": "0e78c570-d9d9-4815-b58d-e025dcdaac2a", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b26c056c-83a1-416e-935b-3e833394d10c", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "9d827e01bef489f5b7a5bd99227d7ea7cfc52635c3e9c5bf9b70e8aac9b711cb", "class_name": "RelatedNodeInfo"}}, "text": "Create the entrypoint file\n\n\nHello.py\n\n```python\nimport streamlit as st\n\nst.set_page_config(\n    page_title=\"Hello\",\n    page_icon=\"\ud83d\udc4b\",\n)\n\nst.write(\"# Welcome to Streamlit! \ud83d\udc4b\")\n\nst.sidebar.success(\"Select a demo above.\")\n\nst.markdown(\n    \"\"\"\n    Streamlit is an open-source app framework built specifically for\n    Machine Learning and Data Science projects.\n    **\ud83d\udc48 Select a demo from the sidebar** to see some examples\n    of what Streamlit can do!\n    ### Want to learn more?\n    - Check out streamlit.io\n    - Jump into our documentation\n    - Ask a question in our [community\n        forums](https://discuss.streamlit.io)\n    ### See more complex demos\n    - Use a neural net to [analyze the Udacity Self-driving Car Image\n        Dataset](https://github.com/streamlit/demo-self-driving)\n    - Explore a New York City rideshare dataset\n\"\"\"\n)\n```\n\n\n\n\nWe rename our entrypoint file to `Hello.py` , so that the title in the sidebar is capitalized and only the code for the intro page is included. Additionally, we\u2019re able to customize the page title and favicon \u2014 as it appears in the browser tab with `st.set_page_config`. We can do so for each of our pages too!\n\n\n\nNotice how the sidebar does not contain page labels as we haven\u2019t created any pages yet.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1260, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8215d805-b52f-4773-8991-083d5e22415d": {"__data__": {"id_": "8215d805-b52f-4773-8991-083d5e22415d", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f665ae9-270b-454f-9b3d-fd40563a558e", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "87527aa9ab9b46d6a20ac25fd7b11b282ee8dc887424c8507378b41426d13011", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5377e3fb-af99-4b80-bfe1-c6f76e76553e", "node_type": "1", "metadata": {}, "hash": "85e5ca0d7882c43ebd10633b0c51305ce93c3a6ce3c55f00a32e5ecfd7b1fe60", "class_name": "RelatedNodeInfo"}}, "text": "Create multiple pages\n\nA few things to remember here:\n\n1. We can change the ordering of pages in our MPA by adding numbers to the beginning of each Python file. If we add a 1 to the front of our file name, Streamlit will put that file first in the list.\n2. The name of each Streamlit app is determined by the file name, so to change the app name you need to change the file name!\n3. We can add some fun to our app by adding emojis to our file names that will render in our Streamlit app.\n4. Each page will have its own URL, defined by the name of the file.\n\nCheck out how we do all this below! For each new page, we create a new file inside the pages folder, and add the appropriate demo code into it.\n\n\n\n\n\npages/1_\ud83d\udcc8_Plotting_Demo.py\n\n```python\nimport streamlit as st\nimport time\nimport numpy as np\n\nst.set_page_config(page_title=\"Plotting Demo\", page_icon=\"\ud83d\udcc8\")\n\nst.markdown(\"# Plotting Demo\")\nst.sidebar.header(\"Plotting Demo\")\nst.write(\n    \"\"\"This demo illustrates a combination of plotting and animation with\nStreamlit. We're generating a bunch of random numbers in a loop for around\n5 seconds. Enjoy!\"\"\"\n)\n\nprogress_bar = st.sidebar.progress(0)\nstatus_text = st.sidebar.empty()\nlast_rows = np.random.randn(1, 1)\nchart = st.line_chart(last_rows)\n\nfor i in range(1, 101):\n    new_rows = last_rows[-1, :] + np.random.randn(5, 1).cumsum(axis=0)\n    status_text.text(\"%i%% Complete\" % i)\n    chart.add_rows(new_rows)\n    progress_bar.progress(i)\n    last_rows = new_rows\n    time.sleep(0.05)\n\nprogress_bar.empty()\n\n# Streamlit widgets automatically run the script from top to bottom. Since\n# this button is not connected to any other logic, it just causes a plain\n# rerun.\nst.button(\"Re-run\")\n```\n\n\n\n\n\n\npages/2_\ud83c\udf0d_Mapping_Demo.py\n\n```python\nimport streamlit as st\nimport pandas as pd\nimport pydeck as pdk\nfrom urllib.error import URLError\n\nst.set_page_config(page_title=\"Mapping Demo\", page_icon=\"\ud83c\udf0d\")\n\nst.markdown(\"# Mapping Demo\")\nst.sidebar.header(\"Mapping Demo\")\nst.write(\n    \"\"\"This demo shows how to use\n`st.pydeck_chart`\nto display geospatial data.\"\"\"\n)\n\n\n@st.cache_data\ndef from_data_file(filename):\n    url = (\n        \"http://raw.githubusercontent.com/streamlit/\"\n        \"example-data/master/hello/v1/%s\" % filename\n    )\n    return pd.read_json(url)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2262, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5377e3fb-af99-4b80-bfe1-c6f76e76553e": {"__data__": {"id_": "5377e3fb-af99-4b80-bfe1-c6f76e76553e", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f665ae9-270b-454f-9b3d-fd40563a558e", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "87527aa9ab9b46d6a20ac25fd7b11b282ee8dc887424c8507378b41426d13011", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8215d805-b52f-4773-8991-083d5e22415d", "node_type": "1", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "2cc60fedb767747b749076193f7d4ff450117053fd676d3948da7345d2fc2f25", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5e0467c-f514-4ac8-b3b1-1f248bf0bf59", "node_type": "1", "metadata": {}, "hash": "c82a16a29053e113d4c7c219f281d84d921124d68d5455e15ceed028bcadd724", "class_name": "RelatedNodeInfo"}}, "text": "pages/2_\ud83c\udf0d_Mapping_Demo.py\n\n```python\nimport streamlit as st\nimport pandas as pd\nimport pydeck as pdk\nfrom urllib.error import URLError\n\nst.set_page_config(page_title=\"Mapping Demo\", page_icon=\"\ud83c\udf0d\")\n\nst.markdown(\"# Mapping Demo\")\nst.sidebar.header(\"Mapping Demo\")\nst.write(\n    \"\"\"This demo shows how to use\n`st.pydeck_chart`\nto display geospatial data.\"\"\"\n)\n\n\n@st.cache_data\ndef from_data_file(filename):\n    url = (\n        \"http://raw.githubusercontent.com/streamlit/\"\n        \"example-data/master/hello/v1/%s\" % filename\n    )\n    return pd.read_json(url)\n\n\ntry:\n    ALL_LAYERS = {\n        \"Bike Rentals\": pdk.Layer(\n            \"HexagonLayer\",\n            data=from_data_file(\"bike_rental_stats.json\"),\n            get_position=[\"lon\", \"lat\"],\n            radius=200,\n            elevation_scale=4,\n            elevation_range=[0, 1000],\n            extruded=True,\n        ),\n        \"Bart Stop Exits\": pdk.Layer(\n            \"ScatterplotLayer\",\n            data=from_data_file(\"bart_stop_stats.json\"),\n            get_position=[\"lon\", \"lat\"],\n            get_color=[200, 30, 0, 160],\n            get_radius=\"[exits]\",\n            radius_scale=0.05,\n        ),\n        \"Bart Stop Names\": pdk.Layer(\n            \"TextLayer\",\n            data=from_data_file(\"bart_stop_stats.json\"),\n            get_position=[\"lon\", \"lat\"],\n            get_text=\"name\",\n            get_color=[0, 0, 0, 200],\n            get_size=15,\n            get_alignment_baseline=\"'bottom'\",\n        ),\n        \"Outbound Flow\": pdk.Layer(\n            \"ArcLayer\",\n            data=from_data_file(\"bart_path_stats.json\"),\n            get_source_position=[\"lon\", \"lat\"],\n            get_target_position=[\"lon2\", \"lat2\"],\n            get_source_color=[200, 30, 0, 160],\n            get_target_color=[200, 30, 0, 160],\n            auto_highlight=True,\n            width_scale=0.0001,\n            get_width=\"outbound\",\n            width_min_pixels=3,\n            width_max_pixels=30,\n        ),\n    }\n    st.sidebar.markdown(\"### Map Layers\")\n    selected_layers = [\n        layer\n        for layer_name, layer in ALL_LAYERS.items()\n        if st.sidebar.checkbox(layer_name, True)\n    ]\n    if selected_layers:\n        st.pydeck_chart(\n            pdk.Deck(\n                map_style=\"mapbox://styles/mapbox/light-v9\",\n                initial_view_state={\n                    \"latitude\": 37.76,\n                    \"longitude\": -122.4,\n                    \"zoom\": 11,\n                    \"pitch\": 50,\n                },\n                layers=selected_layers,\n            )\n        )\n    else:\n        st.error(\"Please choose at least one layer above.\")\nexcept URLError as e:\n    st.error(\n        \"\"\"\n        **This demo requires internet access.**\n        Connection error: %s\n    \"\"\"\n        % e.reason\n    )\n```\n\n\n\n\n\n\npages/3_\ud83d\udcca_DataFrame_Demo.py\n\n```python\nimport streamlit as st\nimport pandas as pd\nimport altair as alt\nfrom urllib.error import URLError\n\nst.set_page_config(page_title=\"DataFrame Demo\", page_icon=\"\ud83d\udcca\")\n\nst.markdown(\"# DataFrame Demo\")\nst.sidebar.header(\"DataFrame Demo\")\nst.write(\n    \"\"\"This demo shows how to use `st.write` to visualize Pandas DataFrames.\n(Data courtesy of the UN Data Explorer.)\"\"\"\n)\n\n\n@st.cache_data\ndef get_UN_data():\n    AWS_BUCKET_URL = \"http://streamlit-demo-data.s3-us-west-2.amazonaws.com\"\n    df = pd.read_csv(AWS_BUCKET_URL + \"/agri.csv.gz\")\n    return df.set_index(\"Region\")", "mimetype": "text/plain", "start_char_idx": 1705, "end_char_idx": 5097, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5e0467c-f514-4ac8-b3b1-1f248bf0bf59": {"__data__": {"id_": "f5e0467c-f514-4ac8-b3b1-1f248bf0bf59", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f665ae9-270b-454f-9b3d-fd40563a558e", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "87527aa9ab9b46d6a20ac25fd7b11b282ee8dc887424c8507378b41426d13011", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5377e3fb-af99-4b80-bfe1-c6f76e76553e", "node_type": "1", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "ae4fc9b170ca5f0f0a4c8d1fbe27334de2cbfd4d798d96fc5d1a617e66d1e215", "class_name": "RelatedNodeInfo"}}, "text": "pages/3_\ud83d\udcca_DataFrame_Demo.py\n\n```python\nimport streamlit as st\nimport pandas as pd\nimport altair as alt\nfrom urllib.error import URLError\n\nst.set_page_config(page_title=\"DataFrame Demo\", page_icon=\"\ud83d\udcca\")\n\nst.markdown(\"# DataFrame Demo\")\nst.sidebar.header(\"DataFrame Demo\")\nst.write(\n    \"\"\"This demo shows how to use `st.write` to visualize Pandas DataFrames.\n(Data courtesy of the UN Data Explorer.)\"\"\"\n)\n\n\n@st.cache_data\ndef get_UN_data():\n    AWS_BUCKET_URL = \"http://streamlit-demo-data.s3-us-west-2.amazonaws.com\"\n    df = pd.read_csv(AWS_BUCKET_URL + \"/agri.csv.gz\")\n    return df.set_index(\"Region\")\n\n\ntry:\n    df = get_UN_data()\n    countries = st.multiselect(\n        \"Choose countries\", list(df.index), [\"China\", \"United States of America\"]\n    )\n    if not countries:\n        st.error(\"Please select at least one country.\")\n    else:\n        data = df.loc[countries]\n        data /= 1000000.0\n        st.write(\"### Gross Agricultural Production ($B)\", data.sort_index())\n\n        data = data.T.reset_index()\n        data = pd.melt(data, id_vars=[\"index\"]).rename(\n            columns={\"index\": \"year\", \"value\": \"Gross Agricultural Product ($B)\"}\n        )\n        chart = (\n            alt.Chart(data)\n            .mark_area(opacity=0.3)\n            .encode(\n                x=\"year:T\",\n                y=alt.Y(\"Gross Agricultural Product ($B):Q\", stack=None),\n                color=\"Region:N\",\n            )\n        )\n        st.altair_chart(chart, use_container_width=True)\nexcept URLError as e:\n    st.error(\n        \"\"\"\n        **This demo requires internet access.**\n        Connection error: %s\n    \"\"\"\n        % e.reason\n    )\n```\n\n\n\n\n\nWith our additional pages created, we can now put it all together in the final step below.", "mimetype": "text/plain", "start_char_idx": 4494, "end_char_idx": 6235, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b69d42f0-d4a3-485d-a759-6456173c4bc2": {"__data__": {"id_": "b69d42f0-d4a3-485d-a759-6456173c4bc2", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d8b959a7-6ea0-47ff-b705-59796c980a8c", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "cacf33b454ce785e878a121b777c87db9b0073b4e99f897be71be065fa4d05b4", "class_name": "RelatedNodeInfo"}}, "text": "Run the multipage app\n\nTo run your newly converted multipage app, run:\n\n```bash\nstreamlit run Hello.py\n```\n\nThat\u2019s it! The `Hello.py` script now corresponds to the main page of your app, and other scripts that Streamlit finds in the pages folder will also be present in the new page selector that appears in the sidebar.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 322, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f2d9b37d-8a69-4c0c-956a-6c839891bb51": {"__data__": {"id_": "f2d9b37d-8a69-4c0c-956a-6c839891bb51", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "219d4a39-3643-4bda-a4cf-5cd7a4569804", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "e37dd031c568e489a314a2aca384065102bb4370287c7e3be38176183413c57d", "class_name": "RelatedNodeInfo"}}, "text": "Next steps\n\nCongratulations! \ud83c\udf89 If you've read this far, chances are you've learned to create both single-page and multipage apps. Where you go from here is entirely up to your creativity! We\u2019re excited to see what you\u2019ll build now that adding additional pages to your apps is easier than ever. Try adding more pages to the app we've just built as an exercise. Also, stop by the forum to show off your multipage apps with the Streamlit community! \ud83c\udf88\n\nHere are a few resources to help you get started:\n\n- Deploy your app for free on Streamlit's Community Cloud.\n- Post a question or share your multipage app on our community forum.\n- Check out our documentation on Multipage apps.\n- Read through Concepts for things like caching, theming, and adding statefulness to apps.\n- Browse our API reference for examples of every Streamlit command.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 838, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "226651d2-ce5f-46de-86a3-dc9b08dbc479": {"__data__": {"id_": "226651d2-ce5f-46de-86a3-dc9b08dbc479", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fe0a7a75-8ea1-457e-b538-8b37a476a4ec", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "e97a86258bbaea88aa590ceb8d29e02aae84b418bbc20a799f8b127211f3ac81", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: Create an app\nslug: /get-started/tutorials/create-an-app\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 71, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19722d02-a37b-4b94-94a9-0d12996aa41b": {"__data__": {"id_": "19722d02-a37b-4b94-94a9-0d12996aa41b", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b106f951-06a4-48bb-9f2b-7119d4716d90", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "7dcdc5d6f9299ae74ed4118b335fb9a7eaf7c4db5e0fdc11c80d9f7a451b6b02", "class_name": "RelatedNodeInfo"}}, "text": "Create an app\n\nIf you've made it this far, chances are you've installed Streamlit and run through the basics in Basic concepts and Advanced concepts. If not, now is a good time to take a look.\n\nThe easiest way to learn how to use Streamlit is to try things out yourself. As you read through this guide, test each method. As long as your app is running, every time you add a new element to your script and save, Streamlit's UI will ask if you'd like to rerun the app and view the changes. This allows you to work in a fast interactive loop: you write some code, save it, review the output, write some more, and so on, until you're happy with the results. The goal is to use Streamlit to create an interactive app for your data or model and along the way to use Streamlit to review, debug, perfect, and share your code.\n\nIn this guide, you're going to use Streamlit's core features to\ncreate an interactive app; exploring a public Uber dataset for pickups and\ndrop-offs in New York City. When you're finished, you'll know how to fetch\nand cache data, draw charts, plot information on a map, and use interactive\nwidgets, like a slider, to filter results.\n\n\n\nIf you'd like to skip ahead and see everything at once, the [complete script\nis available below](#lets-put-it-all-together).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50f403b8-07ce-4a0d-b4f9-0ec6fd104710": {"__data__": {"id_": "50f403b8-07ce-4a0d-b4f9-0ec6fd104710", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ad93e45-74b9-48fa-8ff3-38411b888145", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "511516efbffbb8c8c9f949666e211b097295be6e98752417ad710653bf89f53b", "class_name": "RelatedNodeInfo"}}, "text": "Create your first app\n\nStreamlit is more than just a way to make data apps, it\u2019s also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs \u2014 stop by today!\n\n1. The first step is to create a new Python script. Let's call it\n   `uber_pickups.py`.\n\n2. Open `uber_pickups.py` in your favorite IDE or text editor, then add these\n   lines:\n\n   ```python\n   import streamlit as st\n   import pandas as pd\n   import numpy as np\n   ```\n\n3. Every good app has a title, so let's add one:\n\n   ```python\n   st.title('Uber pickups in NYC')\n   ```\n\n4. Now it's time to run Streamlit from the command line:\n\n   ```bash\n   streamlit run uber_pickups.py\n   ```\n\n   Running a Streamlit app is no different than any other Python script. Whenever you need to view the app, you can use this command.\n\n   \n\n   Did you know you can also pass a URL to `streamlit run`? This is great when combined with GitHub Gists. For example:\n\n   ```bash\n   streamlit run https://raw.githubusercontent.com/streamlit/demo-uber-nyc-pickups/master/streamlit_app.py\n   ```\n\n   \n\n5. As usual, the app should automatically open in a new tab in your\n   browser.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bee09719-9a97-468c-86e5-54ba0f1cb1b0": {"__data__": {"id_": "bee09719-9a97-468c-86e5-54ba0f1cb1b0", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "55fe527d-3329-4e6f-bf84-c4baf834a864", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "c98a48fecb1bd84bb01b238129f434bc324d1e948fba499aa3abe1798d47cdbf", "class_name": "RelatedNodeInfo"}}, "text": "Fetch some data\n\nNow that you have an app, the next thing you'll need to do is fetch the Uber\ndataset for pickups and drop-offs in New York City.\n\n1. Let's start by writing a function to load the data. Add this code to your\n   script:\n\n   ```python\n   DATE_COLUMN = 'date/time'\n   DATA_URL = ('https://s3-us-west-2.amazonaws.com/'\n            'streamlit-demo-data/uber-raw-data-sep14.csv.gz')\n\n   def load_data(nrows):\n       data = pd.read_csv(DATA_URL, nrows=nrows)\n       lowercase = lambda x: str(x).lower()\n       data.rename(lowercase, axis='columns', inplace=True)\n       data[DATE_COLUMN] = pd.to_datetime(data[DATE_COLUMN])\n       return data\n   ```\n\n   You'll notice that `load_data` is a plain old function that downloads some\n   data, puts it in a Pandas dataframe, and converts the date column from text\n   to datetime. The function accepts a single parameter (`nrows`), which\n   specifies the number of rows that you want to load into the dataframe.\n\n2. Now let's test the function and review the output. Below your function, add\n   these lines:\n\n   ```python\n   # Create a text element and let the reader know the data is loading.\n   data_load_state = st.text('Loading data...')\n   # Load 10,000 rows of data into the dataframe.\n   data = load_data(10000)\n   # Notify the reader that the data was successfully loaded.\n   data_load_state.text('Loading data...done!')\n   ```\n\n   You'll see a few buttons in the upper-right corner of your app asking if\n   you'd like to rerun the app. Choose **Always rerun**, and you'll see your\n   changes automatically each time you save.\n\nOk, that's underwhelming...\n\nIt turns out that it takes a long time to download data, and load 10,000 lines\ninto a dataframe. Converting the date column into datetime isn\u2019t a quick job\neither. You don\u2019t want to reload the data each time the app is updated \u2013\nluckily Streamlit allows you to cache the data.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1895, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b99f2474-60c9-4892-9174-55542c7cfc5c": {"__data__": {"id_": "b99f2474-60c9-4892-9174-55542c7cfc5c", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3f6a1c37-ac9c-4ca0-959d-8def1c23713b", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "321593d2717130ef74d480ebebeeb9929e04eaa412f1dacaa842d9420592c5fb", "class_name": "RelatedNodeInfo"}}, "text": "Effortless caching\n\n1. Try adding `@st.cache_data` before the `load_data` declaration:\n\n   ```python\n   @st.cache_data\n   def load_data(nrows):\n   ```\n\n2. Then save the script, and Streamlit will automatically rerun your app. Since\n   this is the first time you\u2019re running the script with `@st.cache_data`, you won't\n   see anything change. Let\u2019s tweak your file a little bit more so that you can\n   see the power of caching.\n\n3. Replace the line `data_load_state.text('Loading data...done!')` with this:\n\n   ```python\n   data_load_state.text(\"Done! (using st.cache_data)\")\n   ```\n\n4. Now save. See how the line you added appeared immediately? If you take a\n   step back for a second, this is actually quite amazing. Something magical is\n   happening behind the scenes, and it only takes one line of code to activate\n   it.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 825, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27f86070-3625-4cbe-b497-c9abbc8a3f9f": {"__data__": {"id_": "27f86070-3625-4cbe-b497-c9abbc8a3f9f", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "faa34f0e-85bf-45cc-a698-514a25af5155", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "2fd949bafa6461ccf0970298a95dd40bc2953322a41452c1703fea2026d86068", "class_name": "RelatedNodeInfo"}}, "text": "How's it work?\n\nLet's take a few minutes to discuss how `@st.cache_data` actually works.\n\nWhen you mark a function with Streamlit\u2019s cache annotation, it tells Streamlit\nthat whenever the function is called that it should check two things:\n\n1. The input parameters you used for the function call.\n2. The code inside the function.\n\nIf this is the first time Streamlit has seen both these items, with these exact\nvalues, and in this exact combination, it runs the function and stores the\nresult in a local cache. The next time the function is called, if the two\nvalues haven't changed, then Streamlit knows it can skip executing the function\naltogether. Instead, it reads the output from the local cache and passes it on\nto the caller -- like magic.\n\n\"But, wait a second,\" you\u2019re saying to yourself, \"this sounds too good to be\ntrue. What are the limitations of all this awesomesauce?\"\n\nWell, there are a few:\n\n1. Streamlit will only check for changes within the current working directory.\n   If you upgrade a Python library, Streamlit's cache will only notice this if\n   that library is installed inside your working directory.\n2. If your function is not deterministic (that is, its output depends on random\n   numbers), or if it pulls data from an external time-varying source (for\n   example, a live stock market ticker service) the cached value will be\n   none-the-wiser.\n3. Lastly, you should avoid mutating the output of a function cached with `st.cache_data` since cached\n   values are stored by reference.\n\nWhile these limitations are important to keep in mind, they tend not to be an\nissue a surprising amount of the time. Those times, this cache is really\ntransformational.\n\n\n\nWhenever you have a long-running computation in your code, consider\nrefactoring it so you can use `@st.cache_data`, if possible. Please read Caching for more details.\n\n\n\nNow that you know how caching with Streamlit works, let\u2019s get back to the Uber\npickup data.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1947, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b5af032-49b2-4090-920e-442fa0280619": {"__data__": {"id_": "2b5af032-49b2-4090-920e-442fa0280619", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b94fc15-6222-4cb1-928c-be4a13d3ee87", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "836ec2d8a42ff47bc0133739ae842ab66ee9618ecc51c3799a83674694dfacbd", "class_name": "RelatedNodeInfo"}}, "text": "Inspect the raw data\n\nIt's always a good idea to take a look at the raw data you're working with\nbefore you start working with it. Let's add a subheader and a printout of the\nraw data to the app:\n\n```python\nst.subheader('Raw data')\nst.write(data)\n```\n\nIn the Basic concepts guide you learned that\n`st.write` will render almost anything you pass\nto it. In this case, you're passing in a dataframe and it's rendering as an\ninteractive table.\n\n`st.write` tries to do the right thing based on\nthe data type of the input. If it isn't doing what you expect you can use a\nspecialized command like `st.dataframe`\ninstead. For a full list, see API reference.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 651, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc7573b3-db47-4c6e-92d9-6a0ae502d62f": {"__data__": {"id_": "bc7573b3-db47-4c6e-92d9-6a0ae502d62f", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27c64392-2f62-4cf6-a56d-a1c8ee8190a6", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "e7a6afeac806e8953a2d958743ac6c703622e8487c66cbfda95f340e86b5c66e", "class_name": "RelatedNodeInfo"}}, "text": "Draw a histogram\n\nNow that you've had a chance to take a look at the dataset and observe what's\navailable, let's take things a step further and draw a histogram to see what\nUber's busiest hours are in New York City.\n\n1. To start, let's add a subheader just below the raw data section:\n\n   ```python\n   st.subheader('Number of pickups by hour')\n   ```\n\n2. Use NumPy to generate a histogram that breaks down pickup times binned by\n   hour:\n\n   ```python\n   hist_values = np.histogram(\n       data[DATE_COLUMN].dt.hour, bins=24, range=(0,24))[0]\n   ```\n\n3. Now, let's use Streamlit's\n   `st.bar_chart()` method to draw this\n   histogram.\n\n   ```python\n   st.bar_chart(hist_values)\n   ```\n\n4. Save your script. This histogram should show up in your app right away.\n   After a quick review, it looks like the busiest time is 17:00 (5 P.M.).\n\nTo draw this diagram we used Streamlit's native `bar_chart()` method, but it's\nimportant to know that Streamlit supports more complex charting libraries like\nAltair, Bokeh, Plotly, Matplotlib and more. For a full list, see\nsupported charting libraries.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1091, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ff96e26d-1e8d-4deb-9dea-48701b681f93": {"__data__": {"id_": "ff96e26d-1e8d-4deb-9dea-48701b681f93", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7378bbf9-2657-4f5e-a37c-900683965021", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "c583f4457969f47faa198ea5c7d333a50c9584563234fbeb9e8736f13cdbb5af", "class_name": "RelatedNodeInfo"}}, "text": "Plot data on a map\n\nUsing a histogram with Uber's dataset helped us determine what the busiest\ntimes are for pickups, but what if we wanted to figure out where pickups were\nconcentrated throughout the city. While you could use a bar chart to show this\ndata, it wouldn't be easy to interpret unless you were intimately familiar with\nlatitudinal and longitudinal coordinates in the city. To show pickup\nconcentration, let's use Streamlit `st.map()`\nfunction to overlay the data on a map of New York City.\n\n1. Add a subheader for the section:\n\n   ```python\n   st.subheader('Map of all pickups')\n   ```\n\n2. Use the `st.map()` function to plot the data:\n\n   ```python\n   st.map(data)\n   ```\n\n3. Save your script. The map is fully interactive. Give it a try by panning or\n   zooming in a bit.\n\nAfter drawing your histogram, you determined that the busiest hour for Uber\npickups was 17:00. Let's redraw the map to show the concentration of pickups\nat 17:00.\n\n1. Locate the following code snippet:\n\n   ```python\n   st.subheader('Map of all pickups')\n   st.map(data)\n   ```\n\n2. Replace it with:\n\n   ```python\n   hour_to_filter = 17\n   filtered_data = data[data[DATE_COLUMN].dt.hour == hour_to_filter]\n   st.subheader(f'Map of all pickups at {hour_to_filter}:00')\n   st.map(filtered_data)\n   ```\n\n3. You should see the data update instantly.\n\nTo draw this map we used the `st.map` function that's built into Streamlit, but\nif you'd like to visualize complex map data, we encourage you to take a look at\nthe `st.pydeck_chart`.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1517, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f73a297b-1cf4-4ef0-a7c0-9b0682cb56d7": {"__data__": {"id_": "f73a297b-1cf4-4ef0-a7c0-9b0682cb56d7", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2935b93f-be19-4d06-afed-bde51e6b5ed6", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "4a95e0cdcd05a2c32c1a3e28122a5d5ea3e6ee88f6d5fb9cd512442b2b472541", "class_name": "RelatedNodeInfo"}}, "text": "Filter results with a slider\n\nIn the last section, when you drew the map, the time used to filter results was\nhardcoded into the script, but what if we wanted to let a reader dynamically\nfilter the data in real time? Using Streamlit's widgets you can. Let's add a\nslider to the app with the `st.slider()` method.\n\n1. Locate `hour_to_filter` and replace it with this code snippet:\n\n   ```python\n   hour_to_filter = st.slider('hour', 0, 23, 17)  # min: 0h, max: 23h, default: 17h\n   ```\n\n2. Use the slider and watch the map update in real time.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 544, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b1903a5-addc-4f57-bcdd-f37d73cda0d3": {"__data__": {"id_": "3b1903a5-addc-4f57-bcdd-f37d73cda0d3", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "af2e88d6-4f4c-4198-a874-7c505fc51771", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "f840a43573e388d215420be2e3056acfd2b9ce15ad5c884047ef28623b1ac2b0", "class_name": "RelatedNodeInfo"}}, "text": "Use a button to toggle data\n\nSliders are just one way to dynamically change the composition of your app.\nLet's use the `st.checkbox` function to add a\ncheckbox to your app. We'll use this checkbox to show/hide the raw data\ntable at the top of your app.\n\n1. Locate these lines:\n\n   ```python\n   st.subheader('Raw data')\n   st.write(data)\n   ```\n\n2. Replace these lines with the following code:\n\n   ```python\n   if st.checkbox('Show raw data'):\n       st.subheader('Raw data')\n       st.write(data)\n   ```\n\nWe're sure you've got your own ideas. When you're done with this tutorial, check out all the widgets that Streamlit exposes in our API Reference.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 652, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d5e9280-5243-425e-a250-53b0ed4db9de": {"__data__": {"id_": "4d5e9280-5243-425e-a250-53b0ed4db9de", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "92bec0a9-4d24-4438-8ed6-4f7236b91804", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "672bd4f023d406573ab8077fc05eb87ed073aa91343de1ad80b5a7cd91091793", "class_name": "RelatedNodeInfo"}}, "text": "Let's put it all together\n\nThat's it, you've made it to the end. Here's the complete script for our interactive app.\n\n\n\nIf you've skipped ahead, after you've created your script, the command to run\nStreamlit is `streamlit run [app name]`.\n\n\n\n```python\nimport streamlit as st\nimport pandas as pd\nimport numpy as np\n\nst.title('Uber pickups in NYC')\n\nDATE_COLUMN = 'date/time'\nDATA_URL = ('https://s3-us-west-2.amazonaws.com/'\n            'streamlit-demo-data/uber-raw-data-sep14.csv.gz')\n\n@st.cache_data\ndef load_data(nrows):\n    data = pd.read_csv(DATA_URL, nrows=nrows)\n    lowercase = lambda x: str(x).lower()\n    data.rename(lowercase, axis='columns', inplace=True)\n    data[DATE_COLUMN] = pd.to_datetime(data[DATE_COLUMN])\n    return data\n\ndata_load_state = st.text('Loading data...')\ndata = load_data(10000)\ndata_load_state.text(\"Done! (using st.cache_data)\")\n\nif st.checkbox('Show raw data'):\n    st.subheader('Raw data')\n    st.write(data)\n\nst.subheader('Number of pickups by hour')\nhist_values = np.histogram(data[DATE_COLUMN].dt.hour, bins=24, range=(0,24))[0]\nst.bar_chart(hist_values)\n\n# Some number in the range 0-23\nhour_to_filter = st.slider('hour', 0, 23, 17)\nfiltered_data = data[data[DATE_COLUMN].dt.hour == hour_to_filter]\n\nst.subheader('Map of all pickups at %s:00' % hour_to_filter)\nst.map(filtered_data)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1329, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "46471b8f-aa71-4041-a8ac-10aa499efb51": {"__data__": {"id_": "46471b8f-aa71-4041-a8ac-10aa499efb51", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a47e4994-2dea-4b82-bf1f-463547322c82", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "c42794f337d4245c0a010b396b89138fd1d80cacabb26625fc5717432ef9e3b3", "class_name": "RelatedNodeInfo"}}, "text": "Share your app\n\nAfter you\u2019ve built a Streamlit app, it's time to share it! To show it off to the world you can use **Streamlit Community Cloud** to deploy, manage, and share your app for free.\n\nIt works in 3 simple steps:\n\n1. Put your app in a public GitHub repo (and make sure it has a requirements.txt!)\n2. Sign into share.streamlit.io\n3. Click 'Deploy an app' and then paste in your GitHub URL\n\nThat's it! \ud83c\udf88 You now have a publicly deployed app that you can share with the world. Click to learn more about how to use Streamlit Community Cloud.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 548, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c5b2766-6d13-4d8c-850d-6d802f0a4399": {"__data__": {"id_": "5c5b2766-6d13-4d8c-850d-6d802f0a4399", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "763029d2-6072-49cf-b2c9-f9d7bcf0d6d2", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "6b95b46f56a34894d866061b0325d9210a69bc7b62edf80619b57c9680e5f7e5", "class_name": "RelatedNodeInfo"}}, "text": "Get help\n\nThat's it for getting started, now you can go and build your own apps! If you\nrun into difficulties here are a few things you can do.\n\n- Check out our community forum and post a question\n- Quick help from command line with `streamlit help`\n- Go through our Knowledge Base for tips, step-by-step tutorials, and articles that answer your questions about creating and deploying Streamlit apps.\n- Read more documentation! Check out:\n  - Concepts for things like caching, theming, and adding statefulness to apps.\n  - API reference for examples of every Streamlit command.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 579, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4e8fd0e-dca2-4388-be34-16efdc862659": {"__data__": {"id_": "a4e8fd0e-dca2-4388-be34-16efdc862659", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/_index.md", "file_name": "_index.md", "file_size": 1775, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cc6a2e2a-2046-4b2f-9baa-58a4cb347cae", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/_index.md", "file_name": "_index.md", "file_size": 1775, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "c7d23ac14a3026b78def0c2a15f774487edb30fcbc46ac648e73d38ee3b4c184", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: Install Streamlit\nslug: /get-started/installation\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6946d20d-94e8-433d-98cc-43c930b95bbf": {"__data__": {"id_": "6946d20d-94e8-433d-98cc-43c930b95bbf", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/_index.md", "file_name": "_index.md", "file_size": 1775, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4222efd5-7370-4c78-9a76-446b10365851", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/_index.md", "file_name": "_index.md", "file_size": 1775, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "7e26d873df7285073e318e0ee4c727f4406b15cd78fa69cb642cb34e06780a8c", "class_name": "RelatedNodeInfo"}}, "text": "Install Streamlit\n\nThere are multiple ways to set up your development environment and install Streamlit. Read below to\nunderstand these options. Developing locally with Python installed on your own computer is the most\ncommon scenario.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 237, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec0a3b13-5f98-437a-80ac-e503fdf7fd05": {"__data__": {"id_": "ec0a3b13-5f98-437a-80ac-e503fdf7fd05", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/_index.md", "file_name": "_index.md", "file_size": 1775, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c2d79e89-4c6a-4ddc-8f40-c466fc2221f2", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/_index.md", "file_name": "_index.md", "file_size": 1775, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "d251e69c0b3e136dad8198e6194ae532661c9e7d203acfc7f6f241f09586b3ec", "class_name": "RelatedNodeInfo"}}, "text": "Summary for experts\n\n1. Set up your Python development environment.\n2. Run:\n   ```bash\n   pip install streamlit\n   ```\n3. Validate the installation by running our Hello app:\n   ```bash\n   streamlit hello\n   ```\n4. Jump to our Basic concepts.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 243, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "66135b62-3551-412d-845d-a88665753b70": {"__data__": {"id_": "66135b62-3551-412d-845d-a88665753b70", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/_index.md", "file_name": "_index.md", "file_size": 1775, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "465e7581-c1f0-4715-a8de-2dc7ee833fd9", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/_index.md", "file_name": "_index.md", "file_size": 1775, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "11e1c67299844c02ef06eedd1a95958e91e5a6395794754a2ea347685f55443c", "class_name": "RelatedNodeInfo"}}, "text": "Installation steps for the rest of us\n\n\n\n\n\nOption 1: I'm comfortable with the command line\n\nInstall Streamlit on your own machine using tools like `venv` and `pip`.\n\n\n\n\n\nOption 2: I prefer a graphical interface\n\nInstall Streamlit using the Anaconda Distribution graphical user interface. This is also the best\napproach if you're on Windows or don't have Python set up.\n\n\n\n\n\nOption 3: I'd rather use a cloud-based environment\n\nUse Streamlit Community Cloud with GitHub Codespaces so you don't have to go through the trouble\nof installing Python and setting up an environment.\n\n\n\n\n\nOption 4: I need something secure, controlled, and in the cloud\n\nUse Streamlit in Snowflake to code your apps in the cloud, right alongside your\ndata with role-based access controls.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 764, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d7d2e543-06d4-4af4-a782-abfab8a0816b": {"__data__": {"id_": "d7d2e543-06d4-4af4-a782-abfab8a0816b", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b2db136c-e2a3-4e55-b5ce-47ba3a38304d", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "3430196bb1306b4fcdb04f37b261027e0c71c4780fe2019463fe3df5b648a238", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: Install Streamlit using Anaconda Distribution\nslug: /get-started/installation/anaconda-distribution\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 114, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98c7ce70-e383-4774-bfc1-55bf09884454": {"__data__": {"id_": "98c7ce70-e383-4774-bfc1-55bf09884454", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2bf39b9a-05b2-4ebf-8cae-bc514a359046", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "985f694a5b378e3f3febac223e381b7b8baf3d91d3fbf2b846ca68f43c65b002", "class_name": "RelatedNodeInfo"}}, "text": "Install Streamlit using Anaconda Distribution\n\nThis page walks you through installing Streamlit locally using Anaconda Distribution. At the end, you'll build a simple \"Hello world\" app and run it. You can read more about Getting started with Anaconda Distribution in Anaconda's docs. If you prefer to manage your Python environments via command line, check out how to Install Streamlit using command line.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2878d5b9-95d6-4e12-a7f3-b158d7b77fe4": {"__data__": {"id_": "2878d5b9-95d6-4e12-a7f3-b158d7b77fe4", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2597f28d-d2c5-4956-9670-86aaa4b8bf6f", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "72bd674c1bd977af14422a91744c7b1d6451f47c83ec433a2574e94d3a0d0c7e", "class_name": "RelatedNodeInfo"}}, "text": "Prerequisites\n\n1. **A code editor**\n\n   Anaconda Distribution includes Python and basically everything you need to get started.\n   The only thing left for you to choose is a code editor.\n\n   Our favorite editor is VS Code, which is also what we\n   use in all our tutorials.\n\n1. **Knowledge about environment managers**\n\n   Environment managers create virtual environments to isolate Python package installations between\n   projects. For a detailed introduction to Python environments, check out\n   Python Virtual Environments: A Primer.\n\n   But don't worry! In this guide we'll teach you how to install and use an environment manager\n   (Anaconda).", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 650, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e2d3ac1-493e-41b1-b7ae-a3e0a98b840d": {"__data__": {"id_": "1e2d3ac1-493e-41b1-b7ae-a3e0a98b840d", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1dd8d531-b918-4cb2-9df0-6ca061dfd910", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "d741c00da5eb2bd7f787448b42f7c34c19fc80558f9eee4d8bb45b5abbe62eed", "class_name": "RelatedNodeInfo"}}, "text": "Install Anaconda Distribution\n\n1. Go to anaconda.com/download.\n\n2. Install Anaconda Distribution for your OS.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 111, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8e4ae08-4a75-4948-a06a-9c757bc72310": {"__data__": {"id_": "e8e4ae08-4a75-4948-a06a-9c757bc72310", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03e6c524-c339-4cef-9924-1bc08b57c83c", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "5a09bdc34dd85c11832eddf531e643b28bba3771a0c9536befc62d1d3be34e78", "class_name": "RelatedNodeInfo"}}, "text": "Create an environment using Anaconda Navigator\n\n3. Open Anaconda Navigator (the graphical interface included with Anaconda Distribution).\n\n4. You can decline signing in to Anaconda if prompted.\n\n5. In the left menu, click \"**Environments**\".\n   !Open your environments list in Anaconda Navigator\n\n6. At the bottom of your environments list, click \"**Create**\".\n   !Click \"Create\" to open the Create new environment dialog\n\n7. Enter \"streamlitenv\" for the name of your environment.\n\n8. Click \"**Create**.\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 506, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6495f07-a212-4df6-b5c4-f92a075a995a": {"__data__": {"id_": "d6495f07-a212-4df6-b5c4-f92a075a995a", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b19cdaa1-3b88-4d0b-9ced-2275b71cf776", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "fb0667f068acdac0bb1051a7acf9a09c78d3071a5c7c2c58a0468517eb904371", "class_name": "RelatedNodeInfo"}}, "text": "Activate your environment\n\n9. Click the green play icon (play_circle) next to your environment.\n\n10. Click \"**Open Terminal**.\"\n    !Open a new terminal with your environment activated\n\n11. A terminal will open with your environment activated. Your environment's name will appear in parentheses at the beginning of your terminal's prompt to show that it's activated.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 368, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d0f821d-fe2f-4278-bd18-8081c83fd468": {"__data__": {"id_": "0d0f821d-fe2f-4278-bd18-8081c83fd468", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "853881a7-32e4-44cb-94a7-5c1043187408", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "524c5ccccd39b2ed881aff5db8755d98ac4a2be4b5172aa24ec792b903687175", "class_name": "RelatedNodeInfo"}}, "text": "Install Streamlit in your environment\n\n12. In your terminal, type:\n\n    ```bash\n    pip install streamlit\n    ```\n\n13. To validate your installation, enter:\n\n    ```bash\n    streamlit hello\n    ```\n\n    If this doesn't work, use the long-form command:\n\n    ```bash\n    python -m streamlit hello\n    ```\n\n14. The Streamlit Hello example app will automatically open in your browser. If it doesn't, open your browser and go to the localhost address indicated in your terminal, typically `http://localhost:8501`. Play around with the app!\n\n15. Close your terminal.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 562, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0be5c4e5-f500-486c-b82f-4ecf0ad05110": {"__data__": {"id_": "0be5c4e5-f500-486c-b82f-4ecf0ad05110", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2f8c7865-1274-4f95-a8fc-c997ac18bac1", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "67d21af345ae06d523fa6f57acef09c227e9606a1db2c6063f32b252a74261eb", "class_name": "RelatedNodeInfo"}}, "text": "Create a `Hello World` app and run it\n\n17. Open VS Code with a new project.\n\n18. Create a Python file named `app.py` in your project folder.\n    !Create a new file called app.py\n\n19. Copy the following code into `app.py` and save it.\n\n    ```python\n    import streamlit as st\n\n    st.write(\"Hello World\")\n    ```\n\n20. Click your Python interpreter in the lower-right corner, then choose your `streamlitenv` environment from the drop-down.\n    !Set your Python interpreter to your `streamlitenv` environment\n\n21. Right-click `app.py` in your file navigation and click \"**Open in integrated terminal**\".\n    !Open your terminal in your project folder\n\n22. A terminal will open with your environment activated. Confirm this by looking for \"(streamlitenv)\" at the beginning of your next prompt.\n    If it is not there, manually activate your environment with the command:\n\n    ```bash\n    conda activate streamlitenv\n    ```\n\n23. In your terminal, type:\n\n    ```bash\n    streamlit run app.py\n    ```\n\n    If this doesn't work, use the long-form command:\n\n    ```bash\n    python -m streamlit run app.py\n    ```\n\n    !Start your Streamlit app with `streamlit run app.py`\n\n24. Your app will automatically open in your browser. If it doesn't for any reason, open your browser and go to the localhost address indicated in your terminal, typically `http://localhost:8501`.\n\n25. Change `st.write` to `st.title` and save your file:\n\n    ```python\n    import streamlit as st\n\n    st.title(\"Hello World\")\n    ```\n\n26. In your browser, click \"**Always rerun**\" to instantly rerun your app whenever you save a change to your file.\n    !Automatically rerun your app when your source file changes\n\n27. Your app will update! Keep making changes and you will see your changes as soon as you save your file.\n    !Your app updates when you resave your source file\n\n28. When you're done, you can stop your app with `Ctrl+C` in your terminal or just by closing your terminal.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1953, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "306f3dcb-8e88-4784-8dd9-724e2818452b": {"__data__": {"id_": "306f3dcb-8e88-4784-8dd9-724e2818452b", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "edf98e59-107d-496d-888a-3058500d131b", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "b4a21d23d13b2517284f0c524eb8091b31dba2bc6afe9f36a5dda03de899cb5e", "class_name": "RelatedNodeInfo"}}, "text": "What's next?\n\nRead about our Basic concepts and try out more commands in your app.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 84, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2e6af211-344f-4721-9c9e-80834eb2250f": {"__data__": {"id_": "2e6af211-344f-4721-9c9e-80834eb2250f", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6467d30e-337b-48e4-9b8c-aada239aa0e2", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "508c4d7fd0a9ae5e3c932abda84a8fc643fa6e30ed804f2404851159f74438bf", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: Use Community Cloud to develop with GitHub Codespaces\nslug: /get-started/installation/community-cloud\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 116, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "713ecc0c-d3a7-47c2-a37f-7e24734872f6": {"__data__": {"id_": "713ecc0c-d3a7-47c2-a37f-7e24734872f6", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f58c049-a706-40b0-999b-1a1ff7dbf7c1", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "2539e4185f814e5095dd2c5ca46f43ecec1c82359ac33ff9146c25f02892a442", "class_name": "RelatedNodeInfo"}}, "text": "Use Community Cloud to develop with GitHub Codespaces\n\nTo use GitHub codespaces for Streamlit development, a properly configured `devcontainer.json` file is needed to set up the environment. Fortunately, Community Cloud is here to help! Although Streamlit Community Cloud is primarily used to deploy and share apps with the rest of the world, we've build in some handy features to make it easy to use GitHub Codespaces. This guide explains how to create a Community Cloud account and use an automated workflow to get you into a GitHub codespace and live-editing a Streamlit app. The automated workflow will fork our Streamlit Hello app to your GitHub account, deploy it, then open up a codespace for you to start editing. All this happens right in your browser, no installation required.\n\nYou will be signing in to your Google and GitHub accounts during this process. If you do not already have these accounts, you can create them before you begin. If you do not want to use a Google account, you can create your account with any email.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1038, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7981f459-ca40-4a08-997a-da7fa70a62a9": {"__data__": {"id_": "7981f459-ca40-4a08-997a-da7fa70a62a9", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0356be8b-a14c-4bb8-a94d-702c5e8afc09", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "c4d2deee98ae8fce56d554e8c76e81c6672d2002a1c2c12744f26e5895404ec2", "class_name": "RelatedNodeInfo"}}, "text": "Sign up for Streamlit Community Cloud\n\n1. Go to share.streamlit.io/signup.\n2. Click \"**Continue with Google**\".\n\n\n\n\n\n3. Enter your Google credentials and follow Google's authentication prompts.\n4. After authenticating with Google, click \"**Connect GitHub account**\".\n\n\n\n\n\n5. Enter your GitHub credentials and follow GitHub's authentication prompts.\n6. Click \"**Authorize streamlit**\".\n\n\n\n\n\n7. To finish, fill in your information and click \"**Continue**\" at the bottom of the screen.\n\n\n\n\n\n8. You will be taken to your Streamlit workspace. If you see a warning icon (warning) next to \"**Settings**\" in the upper-right corner, this will be addressed in the next steps.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 667, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "860e7ca5-e8c8-43b3-bbb3-72256ab6d0a6": {"__data__": {"id_": "860e7ca5-e8c8-43b3-bbb3-72256ab6d0a6", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "710656cc-e76e-4fe0-9773-4b9fb4c1c57c", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "fbe64d097f32a91e3e2ac672983240646f44531eefc66c7055d4d3e4216ab256", "class_name": "RelatedNodeInfo"}}, "text": "Create a new app with GitHub Codespaces\n\n9. Click the down arrow (expand_more) to expand the options under \"**New App**\".\n\n\n\n\n\n10. Click \"**Create new app with GitHub Codespaces**\".\n\n\n\n\n\n11. You will be prompted that \"Streamlit is requesting additional permissions\". Click \"**Authorize streamlit**\".\n\n\n\n\n\n12. The Streamlit Hello repository will be forked to your GitHub account. Fill in a repository name and click \"**Create!**\"\n\n\n\n\n\n13. Click \"**Create new codespace**\" to confirm the creation of a codespace on your GitHub account. Read more about GitHub Codespaces the learn about monthly limits for free use and paid plans.\n\n\n\n\n\n14. Wait for GitHub to set up your codespace.\n\n\n\n\n\n15. GitHub will automatically execute the commands to launch your Streamlit app within your codespace. Your app will be visible in a \"Simple Browser\" on the right. This may take a minute to complete from when your codespace first appears on screen.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 934, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "243a7bd4-59ed-44ec-bf13-8167446db648": {"__data__": {"id_": "243a7bd4-59ed-44ec-bf13-8167446db648", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "74036718-21f5-4163-935c-42ac417bba8d", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "4e5625d98b99c1179df01ad8f1eafe9111b0bf73ee5352a242b53db484b270b8", "class_name": "RelatedNodeInfo"}}, "text": "Edit your app in GitHub Codespaces\n\n16. Go to the app's main file (`Hello.py`) and add some text to the title in `st.write()`. Try typing \":balloon:\" at the beginning.\n\n\n\n\n\n17. Files are automatically saved in your codespace with each edit. Click \"**Always rerun**\" in the upper-right corner of your app to automatically rerun with each edit.\n\n\n\n\n\n18. See your edits and keep going!", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 384, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "baa7c38d-9dde-4df9-bfc8-a48b88b3418d": {"__data__": {"id_": "baa7c38d-9dde-4df9-bfc8-a48b88b3418d", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "adb80a98-b6c6-4014-b215-d9acdf68c8bd", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "58d75edac6d2c050561f6550e488aaf4497a0a5a0d5f76bf37045948ee2bf03d", "class_name": "RelatedNodeInfo"}}, "text": "Stop or delete your codespace\n\nWhen you are done, remember to stop your codespace on GitHub to avoid any undesired use of your capacity.\n\n19. Go to github.com/codespaces. At the bottom of the page, all your codespaces are listed. Click the overflow menu icon (more_horiz) for your codespace.\n\n\n\n\n\n20. Click \"**Stop codespace**\" if you'd like to return to your work later. Otherwise, click \"**Delete**.\"\n\n    \n    \n    \n    \n    \n    \n    \n    \n\n21. Congratulations! You just deployed an app to Streamlit Community Cloud. \ud83c\udf89 Head back to your workspace at share.streamlit.io/ and deploy another Streamlit app.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 609, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb50d151-6d93-415f-be37-3e73f5022290": {"__data__": {"id_": "bb50d151-6d93-415f-be37-3e73f5022290", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29969142-c2b3-4f4b-a998-db7822056f49", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "4bdd6b1409e3480a5bd756c549bf4e5c1e7b22217bdec664c8f06c52647b00fc", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: Install Streamlit using command line\nslug: /get-started/installation/command-line\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 96, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1aca6b69-b6a0-4726-8ce3-14343bb06b7d": {"__data__": {"id_": "1aca6b69-b6a0-4726-8ce3-14343bb06b7d", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "111fcca9-408c-4ace-980f-e057a67b094e", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "d3b402b4adacf156ed16051e1148363478f03f4657131555514eaf77023a1446", "class_name": "RelatedNodeInfo"}}, "text": "Install Streamlit using command line\n\nThis page will walk you through creating an environment with `venv` and installing Streamlit with `pip`. These are our recommended tools, but if you are familiar with others you can use your favorite ones too. At the end, you'll build a simple \"Hello world\" app and run it. If you prefer to have a graphical interface to manage your Python environments, check out how to Install Streamlit using Anaconda Distribution.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 457, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b772579-18e5-4a12-a533-3a62d0080927": {"__data__": {"id_": "4b772579-18e5-4a12-a533-3a62d0080927", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b35c06b6-0e2d-4b1c-a785-f4e152fd92d6", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "3e2b9475ab10db7f157f09944730b25857956bf7bdb1d398c7aa0a86f4a8b842", "class_name": "RelatedNodeInfo"}}, "text": "Prerequisites\n\nAs with any programming tool, in order to install Streamlit you first need to make sure your\ncomputer is properly set up. More specifically, you\u2019ll need:\n\n1. **Python**\n\n   We support version 3.8 to 3.12.\n\n1. **A Python environment manager** (recommended)\n\n   Environment managers create virtual environments to isolate Python package installations between\n   projects.\n\n   We recommend using virtual environments because installing or upgrading a Python package may\n   cause unintentional effects on another package. For a detailed introduction to Python\n   environments, check out\n   Python Virtual Environments: A Primer.\n\n   For this guide, we'll be using `venv`, which comes with Python.\n\n1. **A Python package manager**\n\n   Package managers handle installing each of your Python packages, including Streamlit.\n\n   For this guide, we'll be using `pip`, which comes with Python.\n\n1. **Only on MacOS: Xcode command line tools**\n\n   Download Xcode command line tools using these instructions\n   in order to let the package manager install some of Streamlit's dependencies.\n\n1. **A code editor**\n\n   Our favorite editor is VS Code, which is also what we use in\n   all our tutorials.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1200, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b7d9e5c-e03e-4888-84bb-4975fa0b1ad6": {"__data__": {"id_": "3b7d9e5c-e03e-4888-84bb-4975fa0b1ad6", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb8e9a9b-3770-462b-bd0e-2f4535d694a7", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "df33022d76fcf0426967448a46a2dfb9e2dfbeba1fb0253246b4e880dfcb40ff", "class_name": "RelatedNodeInfo"}}, "text": "Create an environment using `venv`\n\n1. Open a terminal and navigate to your project folder.\n\n   ```bash\n   cd myproject\n   ```\n\n2. In your terminal, type:\n\n   ```bash\n   python -m venv .venv\n   ```\n\n3. A folder named \".venv\" will appear in your project. This directory is where your virtual environment and its dependencies are installed.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f58fbcd3-fb3a-4ed1-8217-1f4ba28a7998": {"__data__": {"id_": "f58fbcd3-fb3a-4ed1-8217-1f4ba28a7998", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fba53a3c-a56b-4a90-82cb-b473948e5bbb", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "e5fa02f2f547aa47954ae7eb32702fa9d562400546b3ea76299b6cfe307a448e", "class_name": "RelatedNodeInfo"}}, "text": "Activate your environment\n\n4. In your terminal, activate your environment with one of the following commands, depending on your operating system.\n\n   ```bash\n   # Windows command prompt\n   .venv\\Scripts\\activate.bat\n\n   # Windows PowerShell\n   .venv\\Scripts\\Activate.ps1\n\n   # macOS and Linux\n   source .venv/bin/activate\n   ```\n\n5. Once activated, you will see your environment name in parentheses before your prompt. \"(.venv)\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 430, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f0c6715-040f-489e-a0b7-89a5369e65a8": {"__data__": {"id_": "5f0c6715-040f-489e-a0b7-89a5369e65a8", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "387264ba-7376-4921-86c8-b45a3f4caa5f", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "a0f2f11eedbe20209259ecd42cb790350beec16fb887b74849863e13deab7ae3", "class_name": "RelatedNodeInfo"}}, "text": "Install Streamlit in your environment\n\n6. In the terminal with your environment activated, type:\n\n   ```bash\n   pip install streamlit\n   ```\n\n7. Test that the installation worked by launching the Streamlit Hello example app:\n\n   ```bash\n   streamlit hello\n   ```\n\n   If this doesn't work, use the long-form command:\n\n   ```bash\n   python -m streamlit hello\n   ```\n\n8. Streamlit's Hello app should appear in a new tab in your web browser!\n   \n9. Close your terminal when you are done.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 485, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "978e1564-89cb-4623-b580-0f7cab175e0e": {"__data__": {"id_": "978e1564-89cb-4623-b580-0f7cab175e0e", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a62c91e-287b-43a1-a4d8-09793d9ae9dc", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "f5d7faf119a541fb1aaa030ac2a9adb0708340315e5556ea63cbaf3e501ff6d6", "class_name": "RelatedNodeInfo"}}, "text": "Create a \"Hello World\" app and run it\n\n10. Create a file named `app.py` in your project folder.\n\n```python\nimport streamlit as st\n\nst.write(\"Hello world\")\n```\n\n11. Any time you want to use your new environment, you first need to go to your project folder (where the `.venv` directory lives) and run the command to activate it:\n\n```bash\n# Windows command prompt\n.venv\\Scripts\\activate.bat\n\n# Windows PowerShell\n.venv\\Scripts\\Activate.ps1\n\n# macOS and Linux\nsource .venv/bin/activate\n```\n\n12. Once activated, you will see your environment's name in parentheses at the beginning of your terminal prompt. \"(.venv)\"\n\n13. Run your Streamlit app.\n\n```bash\nstreamlit run app.py\n```\n\nIf this doesn't work, use the long-form command:\n\n```bash\npython -m streamlit run app.py\n```\n\n14. To stop the Streamlit server, press `Ctrl+C` in the terminal.\n\n15. When you're done using this environment, return to your normal shell by typing:\n\n```bash\ndeactivate\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 945, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21d5824c-a3d4-4ac7-9f60-ab034336ee4e": {"__data__": {"id_": "21d5824c-a3d4-4ac7-9f60-ab034336ee4e", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1c4d1404-c71e-4684-979e-da943a6dd37d", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "ae95a06dc8df38935213bdb2cec07e9362829ef47113945658484b1b0a67259a", "class_name": "RelatedNodeInfo"}}, "text": "What's next?\n\nRead about our Basic concepts to understand Streamlit's dataflow model.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 87, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d672c73-7078-4c77-b2b7-881d9f4600f7": {"__data__": {"id_": "6d672c73-7078-4c77-b2b7-881d9f4600f7", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4a968bb4-11d7-45ee-b47a-ad2983a8db5e", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "61b2a0451e237c05ec304fbf58b56b3028f772c09840c32563bb19fd67428f08", "class_name": "RelatedNodeInfo"}}, "text": "---\ntitle: Use Streamlit in Snowflake\nslug: /get-started/installation/streamlit-in-snowflake\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 96, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "97c9b562-964d-42ff-894d-063889907caf": {"__data__": {"id_": "97c9b562-964d-42ff-894d-063889907caf", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9d528af7-c87e-4345-a21b-56000b061d61", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "4f2edf631f6c4ab1680e072eff340fc37c495e91c13c6be612e74d9eb1943462", "class_name": "RelatedNodeInfo"}}, "text": "Use Streamlit in Snowflake to code in a secure environment\n\nSnowflake is a single, global platform that powers the Data Cloud. If you want to use a secure platform with role-based access control, this is the option for you! This page walks you through creating a trial Snowflake account and building a simple \"Hello world\" app. Your trial account comes with an account credit so you can try out the service without entering any payment information.\n\n\n\nStreamlit in Snowflake is currently based on Streamlit version 1.22.0 with some Limitations and unsupported features. We are working on supporting newer versions and more features.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 634, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "10d8f21b-682e-46f6-81fc-a3f4f2e14d10": {"__data__": {"id_": "10d8f21b-682e-46f6-81fc-a3f4f2e14d10", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cde89207-df1c-444c-bd42-0fd26ffa112f", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "00c1be7cb64fa0f4e023ae9f5330dad1d3a9900fa807b4872d9eacf50763eb63", "class_name": "RelatedNodeInfo"}}, "text": "Prerequisites\n\nAll you need is an email address! Everything else happens in your 30-day trial account.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 104, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0cc786f4-2949-4f8b-a280-140b9dd1e31c": {"__data__": {"id_": "0cc786f4-2949-4f8b-a280-140b9dd1e31c", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c65e003-b383-4325-abf0-be6b1f0af262", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "c305e32c4c0049723860b5db01b965e878ac5a4b23ddb34f12bd87905988d653", "class_name": "RelatedNodeInfo"}}, "text": "Create an account\n\n1. Go to signup.snowflake.com. (This link will open in a new tab.)\n\n2. Fill in your information and click \"**CONTINUE**.\"\n\n3. Select \"**Standard**\" for your Snowflake edition and \"**Amazon Web Services**\" for your cloud provider.\n\n4. Choose the region nearest you, accept the terms, and click \"**GET STARTED**.\"\n\n\n    \n\n\n5. Answer or skip a few questions to let us know more about yourself.\n\n6. A message will display to confirm \"You're now signed up!\" Go to your email and click on the activation link. (Within your link, note the subdomain. This is your Snowflake account identifier. `https://.snowflakecomputing.com`)\n\n7. Set your username and password. This will be an admin user account within your Snowflake account. Your Snowflake account can have multiple users within it.\n\n8. If you are not signed in after setting your password, follow the instructions to enter your Snowflake account identifier before entering your username and password. If you've accidentally closed your browser, you can log in at app.snowflake.com.\n\n9. Congratulations! You have a trial Snowflake account. The first thing you will see are some sample databases. (This interface is called Snowsight. Check out the Snowflake docs for a quick tour.)\n\n   !Sample databases in your new trial Snowflake account", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "350d6976-6f36-477c-a528-eda131eb74d5": {"__data__": {"id_": "350d6976-6f36-477c-a528-eda131eb74d5", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c8d998fa-8a98-4583-89ca-671e5afbc0f6", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "5a8036e543ddb4e1821e12b3eec405edf6b77731c4377d1ca5468551e6fd0ece", "class_name": "RelatedNodeInfo"}}, "text": "Accept the use of Anaconda on your Snowflake account\n\n10. In the left navigation, go to \"**Admin**\" then \"**Billing & Terms**.\"\n\n11. In the \"**Anaconda**\" section, click \"**Enable**.\"\n\n12. Accept the terms. The \"**Anaconda**\" section will now show \"**Acknowledged**.\"", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 269, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2f9c8af-9076-41ff-bbba-817dcc89ab88": {"__data__": {"id_": "a2f9c8af-9076-41ff-bbba-817dcc89ab88", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d05b6021-49a5-43ae-8d9f-03b67ed1a2dc", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "a3070d16cce8a799d853ee5eabcc031d6eef8fd147597a3468af989910ace0c4", "class_name": "RelatedNodeInfo"}}, "text": "Create a warehouse and database to hold your Streamlit apps\n\n13. Click on your name in the left navigation. Hover over \"**Switch Role**\" and select \"**ACCOUNTADMIN**\" to use your account in the context of an admin.\n\n14. In the left navigation under \"**Admin**,\" click on \"**Warehouses**.\"\n\n15. In the upper-right corner, click the blue \"add **Warehouse**\" button.\n\n16. Enter \"STREAMLITWAREHOUSE\" for the name and keep the defaults of \"Standard\" type and \"X-Small\" size. Click \"**Create Warehouse**.\"\n\n17. In the left navigation, go to \"**Data**\" then \"**Databases**.\" (This is back where you started!)\n\n18. In the upper-right corner, click the blue \"add **Database**\" button.\n\n19. Enter \"STREAMLITAPPSDB\" for the name. Click \"**Create**.\"\n\n20. Yay! You now have a new database to hold all your Streamlit apps.\n\n    !New database in your new trial Snowflake account", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 866, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "717d2298-1525-42be-8bb6-e4c3a47e9c25": {"__data__": {"id_": "717d2298-1525-42be-8bb6-e4c3a47e9c25", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "95aeffc1-fa7b-4586-be81-6fdb1805b1aa", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "23749fabd670c414e52e293627e896f96f3c297d42aeb0d2ea5272786b5df952", "class_name": "RelatedNodeInfo"}}, "text": "Create a \"Hello World\" Streamlit app\n\n21. In the left navigation, click on \"**Streamlit**.\"\n\n22. In the upper-right corner, click the blue \"add **Streamlit App**\" button.\n\n23. Enter \"Hello World\" for the name of your app. Your new warehouse and database should already be filled in, along with the \"PUBLIC\" schema for your database. Click \"**Create**.\" (Note that the app will run with the rights of \"ACCOUNTADMIN\" for simplicity. You can curate your roles and permissions to choose who can create and access apps.)\n\n    !Create your first Streamlit in Snowflake app\n\n24. Your new app, prefilled with example code, will open in editing mode. The left panel shows your code. The right panel shows the resulting app.\n\n25. You can explore the example if you want, but we'll proceed here with a simpler example. (Don't worry! You can always make another app to get the same example again.) Delete the code on the left and replace it with:\n\n    ```python\n    import streamlit as st\n\n    st.write(\"Hello World\")\n    ```\n\n26. In the upper-right corner, click the blue \"play_arrow **Run**\" button to make the running app reflect your changes.\n\n27. Hooray! You just wrote a Streamlit app.\n\n!Hello World in Streamlit in Snowflake app\n\n28. Change `st.write` to `st.title`:\n\n    ```python\n    import streamlit as st\n\n    st.title(\"Hello World\")\n    ```\n\n29. In the upper-right corner, click the blue \"play_arrow **Run**\" button to make the running app reflect your changes.\n\n30. You've just edited your app. It's that easy.\n\n    !Hello World in Streamlit in Snowflake app\n\n31. When you're done, click \"chevron_left **Streamlit Apps**\" in the upper-left corner to go back to Snowsight.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1674, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "795e39c1-d1e5-44b4-aa5f-0ac03586ac0f": {"__data__": {"id_": "795e39c1-d1e5-44b4-aa5f-0ac03586ac0f", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "944d66cf-2ac0-408f-bb5b-c99144087de8", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "6769b569661fdd073a142f0c0a70ea35b1fdc2ce4a3d8689d27bc199a983ea4a", "class_name": "RelatedNodeInfo"}}, "text": "Returning to your app\n\n32. When you are ready to return to your app, go to your Snowsight interface. (If you are returning to the site, you can log in at app.snowflake.com.)\n\n33. In the left navigation, go to \"**Streamlit**.\"\n\n34. Click on \"**Hello World**.\" (If you don't see your app, check that you have your role set to \"ACCOUNTADMIN\" as above.)\n\n    !Return to your Streamlit in Snowflake app\n\n35. Your app will open in viewing mode. Just click \"**Edit**\" in the upper-right corner to modify your app again.\n\n    !Change to editing mode in Streamlit in Snowflake", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cd092dfb-e314-40d3-8721-5670ec22b5aa": {"__data__": {"id_": "cd092dfb-e314-40d3-8721-5670ec22b5aa", "embedding": null, "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "da01ddc4-f23a-4dbf-b275-d153e3f696f3", "node_type": "4", "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}, "hash": "d3ad03fbb130ea86e1203046bc727cd09ed869baaf57258a5e0af856765494fb", "class_name": "RelatedNodeInfo"}}, "text": "What's next?\n\nRead about our Basic concepts and try out more commands in your app. To create more apps in your account, you can proceed from Create a \"Hello World\" Streamlit app. The warehouse and database setup do not need to be repeated.\n\nFor more information about creating and managing Streamlit in Snowflake apps, check out the Snowflake docs.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 350, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"50d3a96a-7c9f-451e-b53e-253dd074b888": {"node_ids": ["16351b1b-7a86-4b84-bdb3-2e3aecd4654e"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/_index.md", "file_name": "_index.md", "file_size": 2288, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "bf39f908-54a3-4ac5-a19e-a40be66f192c": {"node_ids": ["ea0a0caa-7e4a-402e-9431-4bf3031f8da6"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/_index.md", "file_name": "_index.md", "file_size": 2288, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "86633b27-cb2b-4a77-8626-94a10383016f": {"node_ids": ["7a4674e4-9a91-4fb7-a79f-2f84227d47e2"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/_index.md", "file_name": "_index.md", "file_size": 1254, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "d301115a-e9e2-41d4-8ef4-239298a8f01b": {"node_ids": ["d324b0fe-baa5-4da3-9416-5791ed80e7d4"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/_index.md", "file_name": "_index.md", "file_size": 1254, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "c7c93a80-bd2f-48d4-a442-f9476fb24da0": {"node_ids": ["c261471f-5bba-42f7-92e6-0c77a7f55055"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "39a9ae62-b1c5-445c-bdce-56579eaed8ca": {"node_ids": ["71e04240-349d-4e04-9953-e3ece006d87c"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "4ff04fed-4514-4dfc-b571-81071d92b099": {"node_ids": ["4e90cd9c-c9d2-45a2-af42-74a269fe6b3a"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "873e4a57-6a46-44c0-a12e-6236181c8785": {"node_ids": ["2393dd5b-45f9-48e1-b8b4-1f9069a4be17"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "2496d1c6-9b2b-49f7-a003-8821da552bbd": {"node_ids": ["d3a5a4b1-3aff-4709-af93-0e6ed9984888"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "36705235-1da1-4ae2-86c5-a85a73a99885": {"node_ids": ["ad727fcc-7086-4904-a6d1-d35e6f8d7b29"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "06fc06c8-f8ff-44e9-8fd1-44e8c080122f": {"node_ids": ["6c810b66-d50b-4a29-922a-f0c4f819e668"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/additional-features.md", "file_name": "additional-features.md", "file_size": 5907, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "eb1ea288-1922-4439-8a0e-0eacf9fa91ca": {"node_ids": ["69664c8b-732e-43a5-9bbf-d9041e928a9d"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "f214e935-e88a-4f16-8b6c-322da8c7fd8d": {"node_ids": ["29dc13bd-1abc-454d-ade2-1a3244f6dbb4"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "9f4e4976-643d-4360-b0d4-7e9b0d53dad7": {"node_ids": ["f58ed654-3579-424f-b6ad-38269bdbc3c5"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "c0550a62-ceca-48f8-8ecd-ba72c8bf34eb": {"node_ids": ["bdf8438c-06c1-4baf-acbd-5123cb0c6894"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "f43890a7-2424-4a9d-9caa-495f93aaf64d": {"node_ids": ["778b178f-97db-4a1d-9b57-18ec0a18ddfe"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "921b172c-43a8-4c89-9cd0-799767c01a1d": {"node_ids": ["f614d8f0-e767-4a1a-a86b-9bdabdb442ae"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "4da6a4ee-ba3f-4639-aadc-34cea1e31eaf": {"node_ids": ["b3406969-6622-4717-ac8d-edc7f61c3c20"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/advanced-concepts.md", "file_name": "advanced-concepts.md", "file_size": 9884, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "1f5617ef-1d47-49f0-b2dc-15bb3bb3d189": {"node_ids": ["d507f3b1-b2ca-4cd4-bd98-5733f209c3d2"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "f4fec4b6-8d18-41c6-91d5-06eb51b0c54a": {"node_ids": ["63660b82-97db-49bc-9bb7-0b1372c3b6ad"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "4c33adac-a6a5-4429-9ee6-60eb9a0c3ff7": {"node_ids": ["7ff510b9-f0a8-4bdc-91dc-584ee7b3180a"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "169b7fce-6f93-4b73-874c-2a417331140f": {"node_ids": ["329860a1-11ce-4971-9533-9340c5a3d2f8"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "2eb784f3-9897-4d1b-9f83-22671fdeff03": {"node_ids": ["320bd439-bb44-465f-bfc2-7430da6691b6"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "7ae83719-4bba-4afd-a83e-060cf4fdfdcb": {"node_ids": ["06d45632-74f2-4373-9905-6ac6428dd2c7"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "3d65fc87-bdd9-4402-aa3f-476c741a027d": {"node_ids": ["53c70e53-4949-4a9e-adb8-b32fb8d80ae1"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "f15f79bc-3338-4230-b32e-8066e96f4658": {"node_ids": ["2d3c7298-a80e-4d0a-b6f6-5d10751cede3"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "d380d343-3218-4fe3-85fc-c9e63a014255": {"node_ids": ["5897cd5e-9483-41cf-b4d6-a33d6c6ff1c2"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "2443acaf-f105-41bd-bc06-31804e919e80": {"node_ids": ["ea748d3d-3030-499a-bf19-ee089970e992"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "4c7387f3-70d3-48e8-b992-6de1d200eb59": {"node_ids": ["7f0a2a42-e066-4136-bb43-a353568638f3"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "943a05e2-94d2-42aa-b373-edb0dd77318c": {"node_ids": ["108c7b0a-43d1-4701-b27a-54b0319f83c1"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "083a01f1-da0d-45c9-a49d-7cc0c400665b": {"node_ids": ["35be786e-65a4-4028-9aa8-ae6e552a8296"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "7584767d-7224-4736-af4f-6f2219ba8d0c": {"node_ids": ["0fea4ee5-9d0d-466a-b54d-671b6c470fd4"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "d7dbcf2c-5b2c-4933-9825-918f43472925": {"node_ids": ["355fb1ab-685a-41a7-9665-8767d67cabcc"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/main-concepts.md", "file_name": "main-concepts.md", "file_size": 14293, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "33337535-4cad-4258-8af8-1ee7c9674583": {"node_ids": ["08e2e369-2067-45e5-8827-20ec850e1195"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/summary.md", "file_name": "summary.md", "file_size": 1046, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "f4b8c2b6-834a-41e4-bb51-b985066fb04b": {"node_ids": ["e93ca347-6cb0-4efa-b36d-1c42f5967f43"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/summary.md", "file_name": "summary.md", "file_size": 1046, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "c423c452-ade8-400e-b950-28c87af9cadc": {"node_ids": ["70ecd1a6-b71d-44fa-a62b-2d9951127053"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/_index.md", "file_name": "_index.md", "file_size": 958, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "2d16ad18-85f1-43a6-8723-49618376bdb5": {"node_ids": ["e6da2920-f573-40a3-bce4-295393918c88"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/_index.md", "file_name": "_index.md", "file_size": 958, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "a00f8f0f-6b81-4ecc-893e-5eb375889dee": {"node_ids": ["524fc683-5345-490c-a469-6b25c5e0581e"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "f3a9f380-6758-4130-babc-2d86245b01e2": {"node_ids": ["8aa3bf7c-1622-40cd-9c62-96d8fb2972ca"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "13f275ef-b53e-4659-9c86-4842eb265bef": {"node_ids": ["472305fd-42d2-4bca-8ad4-3af8d032f9b1", "1fa302cc-34ae-4b37-a51e-949159c94117"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "3f3030f8-6561-4be9-82b9-763884267c9b": {"node_ids": ["d70fa4dc-fc46-43f2-9104-b091021a2cc0"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "b26c056c-83a1-416e-935b-3e833394d10c": {"node_ids": ["0e78c570-d9d9-4815-b58d-e025dcdaac2a"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "9f665ae9-270b-454f-9b3d-fd40563a558e": {"node_ids": ["8215d805-b52f-4773-8991-083d5e22415d", "5377e3fb-af99-4b80-bfe1-c6f76e76553e", "f5e0467c-f514-4ac8-b3b1-1f248bf0bf59"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "d8b959a7-6ea0-47ff-b705-59796c980a8c": {"node_ids": ["b69d42f0-d4a3-485d-a759-6456173c4bc2"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "219d4a39-3643-4bda-a4cf-5cd7a4569804": {"node_ids": ["f2d9b37d-8a69-4c0c-956a-6c839891bb51"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-a-multi-page-app.md", "file_name": "create-a-multi-page-app.md", "file_size": 19278, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "fe0a7a75-8ea1-457e-b538-8b37a476a4ec": {"node_ids": ["226651d2-ce5f-46de-86a3-dc9b08dbc479"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "b106f951-06a4-48bb-9f2b-7119d4716d90": {"node_ids": ["19722d02-a37b-4b94-94a9-0d12996aa41b"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "8ad93e45-74b9-48fa-8ff3-38411b888145": {"node_ids": ["50f403b8-07ce-4a0d-b4f9-0ec6fd104710"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "55fe527d-3329-4e6f-bf84-c4baf834a864": {"node_ids": ["bee09719-9a97-468c-86e5-54ba0f1cb1b0"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "3f6a1c37-ac9c-4ca0-959d-8def1c23713b": {"node_ids": ["b99f2474-60c9-4892-9174-55542c7cfc5c"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "faa34f0e-85bf-45cc-a698-514a25af5155": {"node_ids": ["27f86070-3625-4cbe-b497-c9abbc8a3f9f"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "0b94fc15-6222-4cb1-928c-be4a13d3ee87": {"node_ids": ["2b5af032-49b2-4090-920e-442fa0280619"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "27c64392-2f62-4cf6-a56d-a1c8ee8190a6": {"node_ids": ["bc7573b3-db47-4c6e-92d9-6a0ae502d62f"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "7378bbf9-2657-4f5e-a37c-900683965021": {"node_ids": ["ff96e26d-1e8d-4deb-9dea-48701b681f93"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "2935b93f-be19-4d06-afed-bde51e6b5ed6": {"node_ids": ["f73a297b-1cf4-4ef0-a7c0-9b0682cb56d7"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "af2e88d6-4f4c-4198-a874-7c505fc51771": {"node_ids": ["3b1903a5-addc-4f57-bcdd-f37d73cda0d3"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "92bec0a9-4d24-4438-8ed6-4f7236b91804": {"node_ids": ["4d5e9280-5243-425e-a250-53b0ed4db9de"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "a47e4994-2dea-4b82-bf1f-463547322c82": {"node_ids": ["46471b8f-aa71-4041-a8ac-10aa499efb51"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "763029d2-6072-49cf-b2c9-f9d7bcf0d6d2": {"node_ids": ["5c5b2766-6d13-4d8c-850d-6d802f0a4399"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/fundamentals/tutorials/create-an-app.md", "file_name": "create-an-app.md", "file_size": 15138, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "cc6a2e2a-2046-4b2f-9baa-58a4cb347cae": {"node_ids": ["a4e8fd0e-dca2-4388-be34-16efdc862659"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/_index.md", "file_name": "_index.md", "file_size": 1775, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "4222efd5-7370-4c78-9a76-446b10365851": {"node_ids": ["6946d20d-94e8-433d-98cc-43c930b95bbf"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/_index.md", "file_name": "_index.md", "file_size": 1775, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "c2d79e89-4c6a-4ddc-8f40-c466fc2221f2": {"node_ids": ["ec0a3b13-5f98-437a-80ac-e503fdf7fd05"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/_index.md", "file_name": "_index.md", "file_size": 1775, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "465e7581-c1f0-4715-a8de-2dc7ee833fd9": {"node_ids": ["66135b62-3551-412d-845d-a88665753b70"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/_index.md", "file_name": "_index.md", "file_size": 1775, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "b2db136c-e2a3-4e55-b5ce-47ba3a38304d": {"node_ids": ["d7d2e543-06d4-4af4-a782-abfab8a0816b"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "2bf39b9a-05b2-4ebf-8cae-bc514a359046": {"node_ids": ["98c7ce70-e383-4774-bfc1-55bf09884454"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "2597f28d-d2c5-4956-9670-86aaa4b8bf6f": {"node_ids": ["2878d5b9-95d6-4e12-a7f3-b158d7b77fe4"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "1dd8d531-b918-4cb2-9df0-6ca061dfd910": {"node_ids": ["1e2d3ac1-493e-41b1-b7ae-a3e0a98b840d"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "03e6c524-c339-4cef-9924-1bc08b57c83c": {"node_ids": ["e8e4ae08-4a75-4948-a06a-9c757bc72310"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "b19cdaa1-3b88-4d0b-9ced-2275b71cf776": {"node_ids": ["d6495f07-a212-4df6-b5c4-f92a075a995a"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "853881a7-32e4-44cb-94a7-5c1043187408": {"node_ids": ["0d0f821d-fe2f-4278-bd18-8081c83fd468"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "2f8c7865-1274-4f95-a8fc-c997ac18bac1": {"node_ids": ["0be5c4e5-f500-486c-b82f-4ecf0ad05110"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "edf98e59-107d-496d-888a-3058500d131b": {"node_ids": ["306f3dcb-8e88-4784-8dd9-724e2818452b"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/anaconda-distribution.md", "file_name": "anaconda-distribution.md", "file_size": 5860, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "6467d30e-337b-48e4-9b8c-aada239aa0e2": {"node_ids": ["2e6af211-344f-4721-9c9e-80834eb2250f"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "7f58c049-a706-40b0-999b-1a1ff7dbf7c1": {"node_ids": ["713ecc0c-d3a7-47c2-a37f-7e24734872f6"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "0356be8b-a14c-4bb8-a94d-702c5e8afc09": {"node_ids": ["7981f459-ca40-4a08-997a-da7fa70a62a9"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "710656cc-e76e-4fe0-9773-4b9fb4c1c57c": {"node_ids": ["860e7ca5-e8c8-43b3-bbb3-72256ab6d0a6"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "74036718-21f5-4163-935c-42ac417bba8d": {"node_ids": ["243a7bd4-59ed-44ec-bf13-8167446db648"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "adb80a98-b6c6-4014-b215-d9acdf68c8bd": {"node_ids": ["baa7c38d-9dde-4df9-bfc8-a48b88b3418d"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/cloud-quickstart.md", "file_name": "cloud-quickstart.md", "file_size": 7938, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "29969142-c2b3-4f4b-a998-db7822056f49": {"node_ids": ["bb50d151-6d93-415f-be37-3e73f5022290"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "111fcca9-408c-4ace-980f-e057a67b094e": {"node_ids": ["1aca6b69-b6a0-4726-8ce3-14343bb06b7d"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "b35c06b6-0e2d-4b1c-a785-f4e152fd92d6": {"node_ids": ["4b772579-18e5-4a12-a533-3a62d0080927"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "cb8e9a9b-3770-462b-bd0e-2f4535d694a7": {"node_ids": ["3b7d9e5c-e03e-4888-84bb-4975fa0b1ad6"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "fba53a3c-a56b-4a90-82cb-b473948e5bbb": {"node_ids": ["f58fbcd3-fb3a-4ed1-8217-1f4ba28a7998"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "387264ba-7376-4921-86c8-b45a3f4caa5f": {"node_ids": ["5f0c6715-040f-489e-a0b7-89a5369e65a8"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "7a62c91e-287b-43a1-a4d8-09793d9ae9dc": {"node_ids": ["978e1564-89cb-4623-b580-0f7cab175e0e"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "1c4d1404-c71e-4684-979e-da943a6dd37d": {"node_ids": ["21d5824c-a3d4-4ac7-9f60-ab034336ee4e"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/command-line.md", "file_name": "command-line.md", "file_size": 4429, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "4a968bb4-11d7-45ee-b47a-ad2983a8db5e": {"node_ids": ["6d672c73-7078-4c77-b2b7-881d9f4600f7"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "9d528af7-c87e-4345-a21b-56000b061d61": {"node_ids": ["97c9b562-964d-42ff-894d-063889907caf"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "cde89207-df1c-444c-bd42-0fd26ffa112f": {"node_ids": ["10d8f21b-682e-46f6-81fc-a3f4f2e14d10"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "9c65e003-b383-4325-abf0-be6b1f0af262": {"node_ids": ["0cc786f4-2949-4f8b-a280-140b9dd1e31c"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "c8d998fa-8a98-4583-89ca-671e5afbc0f6": {"node_ids": ["350d6976-6f36-477c-a528-eda131eb74d5"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "d05b6021-49a5-43ae-8d9f-03b67ed1a2dc": {"node_ids": ["a2f9c8af-9076-41ff-bbba-817dcc89ab88"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "95aeffc1-fa7b-4586-be81-6fdb1805b1aa": {"node_ids": ["717d2298-1525-42be-8bb6-e4c3a47e9c25"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "944d66cf-2ac0-408f-bb5b-c99144087de8": {"node_ids": ["795e39c1-d1e5-44b4-aa5f-0ac03586ac0f"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}, "da01ddc4-f23a-4dbf-b275-d153e3f696f3": {"node_ids": ["cd092dfb-e314-40d3-8721-5670ec22b5aa"], "metadata": {"file_path": "/Users/boringtao/Projects/AutoRAG/notebooks/data/get-started/installation/sis.md", "file_name": "sis.md", "file_size": 7465, "creation_date": "2024-08-21", "last_modified_date": "2024-08-21"}}}}